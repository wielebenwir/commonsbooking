{"version":3,"file":"vendor.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA,SAASA,CAAC,GAAI;IACd;IACA;EACA;EAEAA,CAAC,CAACC,SAAS,GAAG;IACZC,EAAE,EAAE,YAAUC,IAAI,EAAEC,QAAQ,EAAEC,GAAG,EAAE;MACjC,IAAIC,CAAC,GAAG,IAAI,CAACA,CAAC,KAAK,IAAI,CAACA,CAAC,GAAG,EAAE,CAAC;MAE/B,CAACA,CAAC,CAACH,IAAI,CAAC,KAAKG,CAAC,CAACH,IAAI,CAAC,GAAG,EAAE,CAAC,EAAEI,IAAI,CAAC;QAC/BC,EAAE,EAAEJ,QAAQ;QACZC,GAAG,EAAEA;MACX,CAAK,CAAC;MAEF,OAAO,IAAI;IACf,CAAG;IAEDI,IAAI,EAAE,cAAUN,IAAI,EAAEC,QAAQ,EAAEC,GAAG,EAAE;MACnC,IAAIK,IAAI,GAAG,IAAI;MACf,SAASC,QAAQ,GAAI;QACnBD,IAAI,CAACE,GAAG,CAACT,IAAI,EAAEQ,QAAQ,CAAC;QACxBP,QAAQ,CAACS,KAAK,CAACR,GAAG,EAAES,SAAS,CAAC;MACpC;MAEIH,QAAQ,CAACI,CAAC,GAAGX;MACb,OAAO,IAAI,CAACF,EAAE,CAACC,IAAI,EAAEQ,QAAQ,EAAEN,GAAG,CAAC;IACvC,CAAG;IAEDW,IAAI,EAAE,cAAUb,IAAI,EAAE;MACpB,IAAIc,IAAI,GAAG,EAAE,CAACC,KAAK,CAACC,IAAI,CAACL,SAAS,EAAE,CAAC,CAAC;MACtC,IAAIM,MAAM,GAAG,CAAC,CAAC,IAAI,CAACd,CAAC,KAAK,IAAI,CAACA,CAAC,GAAG,EAAE,CAAC,EAAEH,IAAI,CAAC,IAAI,EAAE,EAAEe,KAAK,EAAE;MAC5D,IAAIG,CAAC,GAAG,CAAC;MACT,IAAIC,GAAG,GAAGF,MAAM,CAACG,MAAM;MAEvB,KAAKF,CAAC,EAAEA,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QACpBD,MAAM,CAACC,CAAC,CAAC,CAACb,EAAE,CAACK,KAAK,CAACO,MAAM,CAACC,CAAC,CAAC,CAAChB,GAAG,EAAEY,IAAI,CAAC;MAC7C;MAEI,OAAO,IAAI;IACf,CAAG;IAEDL,GAAG,EAAE,aAAUT,IAAI,EAAEC,QAAQ,EAAE;MAC7B,IAAIE,CAAC,GAAG,IAAI,CAACA,CAAC,KAAK,IAAI,CAACA,CAAC,GAAG,EAAE,CAAC;MAC/B,IAAIkB,IAAI,GAAGlB,CAAC,CAACH,IAAI,CAAC;MAClB,IAAIsB,UAAU,GAAG,EAAE;MAEnB,IAAID,IAAI,IAAIpB,QAAQ,EAAE;QACpB,KAAK,IAAIiB,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGE,IAAI,CAACD,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;UAC/C,IAAIG,IAAI,CAACH,CAAC,CAAC,CAACb,EAAE,KAAKJ,QAAQ,IAAIoB,IAAI,CAACH,CAAC,CAAC,CAACb,EAAE,CAACO,CAAC,KAAKX,QAAQ,EACtDqB,UAAU,CAAClB,IAAI,CAACiB,IAAI,CAACH,CAAC,CAAC,CAAC;QAClC;MACA;;MAEA;MACA;MACA;;MAEKI,UAAU,CAACF,MAAM,GACdjB,CAAC,CAACH,IAAI,CAAC,GAAGsB,UAAU,GACpB,OAAOnB,CAAC,CAACH,IAAI,CAAC;MAElB,OAAO,IAAI;IACf;EACA,CAAC;EAEDuB,mBAAc,GAAG1B,CAAC;iCACQ,GAAGA;;EChE7B,IAAI2B,KAAK,GAAG,OAAOC,OAAO,KAAK,WAAW,GAAGA,OAAO,CAAC3B,SAAS,GAAG,EAAE;EACnE,IAAI4B,MAAM,GAAGF,KAAK,CAACG,OAAO,IACrBH,KAAK,CAACI,eAAe,IACrBJ,KAAK,CAACK,qBAAqB,IAC3BL,KAAK,CAACM,kBAAkB,IACxBN,KAAK,CAACO,iBAAiB,IACvBP,KAAK,CAACQ,gBAAgB;MAE3BJ,eAAc,GAAGK,KAAK;;EAEtB;;;;;;;;;EASA,SAASA,KAAK,CAACC,EAAE,EAAEC,QAAQ,EAAE;IAC3B,IAAI,CAACD,EAAE,IAAIA,EAAE,CAACE,QAAQ,KAAK,CAAC,EAAE,OAAO,KAAK;IAC1C,IAAIV,MAAM,EAAE,OAAOA,MAAM,CAACV,IAAI,CAACkB,EAAE,EAAEC,QAAQ,CAAC;IAC5C,IAAIE,KAAK,GAAGH,EAAE,CAACI,UAAU,CAACC,gBAAgB,CAACJ,QAAQ,CAAC;IACpD,KAAK,IAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,KAAK,CAACjB,MAAM,EAAEF,CAAC,EAAE,EAAE;MACrC,IAAImB,KAAK,CAACnB,CAAC,CAAC,IAAIgB,EAAE,EAAE,OAAO,IAAI;IACnC;IACE,OAAO,KAAK;EACd;MC7BAM,UAAc,GAAGC,QAAQ;;EAEzB;;;;;;;;EAQA,SAASA,QAAQ,CAAEC,IAAI,EAAEC,IAAI,EAAE;IAC7B,IAAIzC,GAAG,EAAE0C,IAAI,EAAEC,GAAG,EAAEC,SAAS,CAAC;IAC9B,IAAIC,IAAI,GAAG,CAAC;IAEZ,OAAO,SAASC,SAAS,GAAI;MAC3B9C,GAAG,GAAG,IAAI;MACV0C,IAAI,GAAGjC,SAAS;MAChB,IAAIsC,KAAK,GAAG,IAAIC,IAAI,EAAE,GAAGH,IAAI;MAC7B,IAAI,CAACD,SAAS,EACZ,IAAIG,KAAK,IAAIN,IAAI,EAAE3B,IAAI,EAAE,CAAC,KACrB8B,SAAS,GAAGK,UAAU,CAACnC,IAAI,EAAE2B,IAAI,GAAGM,KAAK,CAAC;MACjD,OAAOJ,GAAG;IACd,CAAG;IAED,SAAS7B,IAAI,GAAI;MACf8B,SAAS,GAAG,CAAC;MACbC,IAAI,GAAG,CAAC,IAAIG,IAAI,EAAE;MAClBL,GAAG,GAAGH,IAAI,CAAChC,KAAK,CAACR,GAAG,EAAE0C,IAAI,CAAC;MAC3B1C,GAAG,GAAG,IAAI;MACV0C,IAAI,GAAG,IAAI;IACf;EACA;MC/BAQ,aAAc,GAAG,SAASC,QAAQ,CAACC,GAAG,EAAEC,OAAO,EAAEtD,QAAQ,EAAE;IACzD,IAAI,CAACA,QAAQ,EAAE;MACb,IAAI,OAAOsD,OAAO,KAAK,UAAU,EAAE;QACjCtD,QAAQ,GAAGsD;QACXA,OAAO,GAAG;MAChB,CAAK,MAAM;QACLtD,QAAQ,GAAGuD;MACjB;IACA;IAEE,IAAIC,OAAO,GAAGH,GAAG,IAAIA,GAAG,CAAClC;IACzB,IAAI,CAACqC,OAAO,EAAE,OAAOxD,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC;IAEvC,IAAIyD,QAAQ,GAAG;IACf,IAAIC,OAAO,GAAG,IAAIC,KAAK,CAACH,OAAO;IAE/BH,GAAG,CAACO,OAAO,CAACN,OAAO,GAAG,UAAUlD,EAAE,EAAEa,CAAC,EAAE;MACrCb,EAAE,CAACW,IAAI,CAACuC,OAAO,EAAEO,SAAS,CAAC5C,CAAC,CAAC;IACjC,CAAG,GAAG,UAAUb,EAAE,EAAEa,CAAC,EAAE;MACnBb,EAAE,CAACyD,SAAS,CAAC5C,CAAC,CAAC;IACnB,CAAG;IAED,SAAS4C,SAAS,CAAC5C,CAAC,EAAE;MACpB,OAAO,UAAU6C,GAAG,EAAEC,MAAM,EAAE;QAC5B,IAAIN,QAAQ,EAAE;QAEd,IAAIK,GAAG,EAAE;UACP9D,QAAQ,CAAC8D,GAAG,EAAEJ,OAAO;UACrBD,QAAQ,GAAG;UACX;QACR;QAEMC,OAAO,CAACzC,CAAC,CAAC,GAAG8C;QAEb,IAAI,CAAC,GAAEP,OAAO,EAAExD,QAAQ,CAAC,IAAI,EAAE0D,OAAO,CAAC;MAC7C,CAAK;IACL;EACA;EAEA,SAASH,IAAI,GAAG;;ECvChB;;;;;EAKe,SAASS,SAAT,CAAmBC,KAAnB,EAA0B;IACvC,OAAOC,UAAU,CAACD,KAAD,CAAV,IAAqB,CAA5B;EACD;MCLKE;IACJ;;;;;IAKA,eAAYC,CAAZ,EAAeC,CAAf,EAAkB;MAAAC;MAChB,KAAKF,CAAL,GAASJ,SAAS,CAACI,CAAD,CAAlB;MACA,KAAKC,CAAL,GAASL,SAAS,CAACK,CAAD,CAAlB;IACD;IAED;;;;;;;;;aAMA,gBAAcE,CAAd,EAAiBC,CAAjB,EAAoB;QAClB,OAAOD,CAAC,CAACH,CAAF,KAAQI,CAAC,CAACJ,CAAV,IAAeG,CAAC,CAACF,CAAF,KAAQG,CAAC,CAACH,CAAhC;MACD;;;;MCrBkBI;IACnB;;;;;;;;;;IAUA,cAAYL,CAAZ,EAAeC,CAAf,EAAkBK,CAAlB,EAAqBC,CAArB,EAAwBC,EAAxB,EAA4B;MAAAN;MAC1B,KAAKM,EAAL,GAAUA,EAAV;MAEA;;MACA,KAAKC,IAAL,GAAYT,CAAZ;MAEA;;MACA,KAAKU,GAAL,GAAWT,CAAX;MAEA;;MACA,KAAKU,KAAL,GAAaL,CAAb;MAEA;;MACA,KAAKM,MAAL,GAAcL,CAAd;IACD;IAED;;;;;;;;;aAMA,oBAAkBJ,CAAlB,EAAqBC,CAArB,EAAwB;QACtB,OACED,CAAC,CAACM,IAAF,GAASL,CAAC,CAACK,IAAF,GAASL,CAAC,CAACO,KAApB,IAA6BP,CAAC,CAACK,IAAF,GAASN,CAAC,CAACM,IAAF,GAASN,CAAC,CAACQ,KAAjD,IACGR,CAAC,CAACO,GAAF,GAAQN,CAAC,CAACM,GAAF,GAAQN,CAAC,CAACQ,MADrB,IAC+BR,CAAC,CAACM,GAAF,GAAQP,CAAC,CAACO,GAAF,GAAQP,CAAC,CAACS,MAFnD;MAGD;;;;ECrCH,cAAe;IACbC,IAAI,EAAE,SADO;IAEbC,YAAY,EAAE,cAFD;IAGbC,OAAO,EAAE,uBAHI;IAIbC,MAAM,EAAE;EAJK,CAAf;ECGA,IAAIR,IAAE,GAAG,CAAT;MAEMS;IACJ,qBAAYC,OAAZ,EAAqBC,KAArB,EAA4B;MAAAjB;MAC1BM,IAAE,IAAI,CAAN;MACA,KAAKA,EAAL,GAAUA,IAAV;MACA,KAAKU,OAAL,GAAeA,OAAf;MAEA;;;;MAGA,KAAKC,KAAL,GAAaA,KAAb;MAEA;;;;MAGA,KAAKC,SAAL,GAAiB,IAAjB;MAEA;;;;;;;MAMA,KAAKC,QAAL,GAAgB,KAAhB;IACD;;;aAED,gBAAO;QACL,KAAKD,SAAL,GAAiB,IAAjB;QACA,KAAKF,OAAL,CAAaI,SAAb,CAAuBC,MAAvB,CAA8BC,OAAO,CAACR,MAAtC;QACA,KAAKE,OAAL,CAAaI,SAAb,CAAuBG,GAAvB,CAA2BD,OAAO,CAACT,OAAnC;QACA,KAAKG,OAAL,CAAaQ,eAAb,CAA6B,aAA7B;MACD;;;aAED,gBAAO;QACL,KAAKN,SAAL,GAAiB,KAAjB;QACA,KAAKF,OAAL,CAAaI,SAAb,CAAuBC,MAAvB,CAA8BC,OAAO,CAACT,OAAtC;QACA,KAAKG,OAAL,CAAaI,SAAb,CAAuBG,GAAvB,CAA2BD,OAAO,CAACR,MAAnC;QACA,KAAKE,OAAL,CAAaS,YAAb,CAA0B,aAA1B,EAAyC,IAAzC;MACD;;;aAED,gBAAO;QACL,KAAKC,UAAL,CAAgB,CAACJ,OAAO,CAACV,YAAT,EAAuBU,OAAO,CAACT,OAA/B,CAAhB;QACA,KAAKc,QAAL,CAAcZ,WAAW,CAACa,GAAZ,CAAgBC,OAA9B;QACA,KAAKF,QAAL,CAAc,KAAKV,KAAL,GAAaF,WAAW,CAACa,GAAZ,CAAgBE,SAAhB,CAA0BC,GAAvC,GAA6ChB,WAAW,CAACa,GAAZ,CAAgBE,SAAhB,CAA0BE,GAArF;QACA,KAAKC,KAAL,GAAalB,WAAW,CAACmB,KAAZ,CAAkBrB,OAA/B;QACA,KAAKsB,KAAL,GAAa,IAAItC,KAAJ,EAAb;MACD;;;aAED,oBAAWuC,OAAX,EAAoB;QAAA;QAClBA,OAAO,CAAC9C,OAAR,CAAgB,UAAC+C,SAAD,EAAe;UAC7BC,KAAI,CAACtB,OAAL,CAAaI,SAAb,CAAuBG,GAAvB,CAA2Bc,SAA3B;QACD,CAFD;MAGD;;;aAED,uBAAcD,OAAd,EAAuB;QAAA;QACrBA,OAAO,CAAC9C,OAAR,CAAgB,UAAC+C,SAAD,EAAe;UAC7BE,MAAI,CAACvB,OAAL,CAAaI,SAAb,CAAuBC,MAAvB,CAA8BgB,SAA9B;QACD,CAFD;MAGD;;;aAED,kBAASG,GAAT,EAAc;QAAA;QACZC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBlD,OAAjB,CAAyB,UAACqD,GAAD,EAAS;UAChCC,MAAI,CAAC5B,OAAL,CAAa6B,KAAb,CAAmBF,GAAnB,IAA0BH,GAAG,CAACG,GAAD,CAA7B;QACD,CAFD;MAGD;;;aAED,mBAAU;QACR,KAAKG,aAAL,CAAmB,CACjBxB,OAAO,CAACR,MADS,EAEjBQ,OAAO,CAACT,OAFS,EAGjBS,OAAO,CAACV,YAHS,CAAnB;QAMA,KAAKI,OAAL,CAAaQ,eAAb,CAA6B,OAA7B;QACA,KAAKR,OAAL,GAAe,IAAf;MACD;;;;EAGHD,WAAW,CAACa,GAAZ,GAAkB;IAChBC,OAAO,EAAE;MACPkB,QAAQ,EAAE,UADH;MAEPvC,GAAG,EAAE,CAFE;MAGPwC,UAAU,EAAE,SAHL;MAIPC,UAAU,EAAE;IAJL,CADO;IAOhBnB,SAAS,EAAE;MACTE,GAAG,EAAE;QACHzB,IAAI,EAAE;MADH,CADI;MAITwB,GAAG,EAAE;QACHmB,KAAK,EAAE;MADJ;IAJI,CAPK;IAehBrC,OAAO,EAAE;MACPsC,MAAM,EAAE;QACNC,OAAO,EAAE,CADH;QAENJ,UAAU,EAAE;MAFN,CADD;MAKPK,KAAK,EAAE;QACLC,eAAe,EAAE;MADZ;IALA,CAfO;IAwBhBxC,MAAM,EAAE;MACNqC,MAAM,EAAE;QACNC,OAAO,EAAE;MADH,CADF;MAINC,KAAK,EAAE;QACLL,UAAU,EAAE,QADP;QAELM,eAAe,EAAE;MAFZ;IAJD;EAxBQ,CAAlB;EAmCAvC,WAAW,CAACmB,KAAZ,GAAoB;IAClBrB,OAAO,EAAE,CADS;IAElBC,MAAM,EAAE;EAFU,CAApB;ECnHA,IAAInB,KAAK,GAAG,IAAZ;EACA,uBAAe,SAAf4D,mBAAqB;IACnB,IAAI5D,KAAK,KAAK,IAAd,EAAoB;MAClB,OAAOA,KAAP;IACD;IAED,IAAMqB,OAAO,GAAGwC,QAAQ,CAACC,IAAT,IAAiBD,QAAQ,CAACE,eAA1C;IACA,IAAM9H,CAAC,GAAG4H,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAAV;IACA/H,CAAC,CAACiH,KAAF,CAAQe,OAAR,GAAkB,+CAAlB;IACA5C,OAAO,CAAC6C,WAAR,CAAoBjI,CAApB;IAEA,4BAAkBkI,MAAM,CAACC,gBAAP,CAAwBnI,CAAxB,EAA2B,IAA3B,CAAlB;MAAQ6E,KAAR,yBAAQA,KAAR,CAVmB;;IAYnBd,KAAK,GAAGqE,IAAI,CAACC,KAAL,CAAWvE,SAAS,CAACe,KAAD,CAApB,MAAiC,EAAzC;IAEAO,OAAO,CAACkD,WAAR,CAAoBtI,CAApB;IAEA,OAAO+D,KAAP;EACD,CAjBD;;ECAA;;;;;;;;;;;EAUe,SAASwE,cAAT,CACbnD,OADa,EACJ6B,KADI,EAGb;IAAA,IADAuB,MACA,uEADSN,MAAM,CAACC,gBAAP,CAAwB/C,OAAxB,EAAiC,IAAjC,CACT;IACA,IAAIrB,KAAK,GAAGD,SAAS,CAAC0E,MAAM,CAACvB,KAAD,CAAP,CAArB,CADA;;IAIA,IAAI,CAACU,gBAAgB,EAAjB,IAAuBV,KAAK,KAAK,OAArC,EAA8C;MAC5ClD,KAAK,IAAID,SAAS,CAAC0E,MAAM,CAACC,WAAR,CAAT,GACL3E,SAAS,CAAC0E,MAAM,CAACE,YAAR,CADJ,GAEL5E,SAAS,CAAC0E,MAAM,CAACG,eAAR,CAFJ,GAGL7E,SAAS,CAAC0E,MAAM,CAACI,gBAAR,CAHb;IAID,CALD,MAKO,IAAI,CAACjB,gBAAgB,EAAjB,IAAuBV,KAAK,KAAK,QAArC,EAA+C;MACpDlD,KAAK,IAAID,SAAS,CAAC0E,MAAM,CAACK,UAAR,CAAT,GACL/E,SAAS,CAAC0E,MAAM,CAACM,aAAR,CADJ,GAELhF,SAAS,CAAC0E,MAAM,CAACO,cAAR,CAFJ,GAGLjF,SAAS,CAAC0E,MAAM,CAACQ,iBAAR,CAHb;IAID;IAED,OAAOjF,KAAP;EACD;;ECjCD;;;;;;;EAOA,SAASkF,SAAT,CAAmBC,KAAnB,EAA0B;IACxB,IAAIC,CAAC,GAAGD,KAAK,CAACjI,MAAd;IAEA,OAAOkI,CAAP,EAAU;MACRA,CAAC,IAAI,CAAL;MACA,IAAMpI,CAAC,GAAGqH,IAAI,CAACgB,KAAL,CAAWhB,IAAI,CAACiB,MAAL,MAAiBF,CAAC,GAAG,CAArB,CAAX,CAAV;MACA,IAAMG,IAAI,GAAGJ,KAAK,CAACnI,CAAD,CAAlB;MACAmI,KAAK,CAACnI,CAAD,CAAL,GAAWmI,KAAK,CAACC,CAAD,CAAhB;MACAD,KAAK,CAACC,CAAD,CAAL,GAAWG,IAAX;IACD;IAED,OAAOJ,KAAP;EACD;EAED,IAAMK,QAAQ,GAAG;IACf;IACAC,OAAO,EAAE,KAFM;IAIf;IACAC,EAAE,EAAE,IALW;IAOf;IACAC,OAAO,EAAE,IARM;IAUf;IACAT,SAAS,EAAE,KAXI;IAaf;IACA;IACAlC,GAAG,EAAE;EAfU,CAAjB;EAkBA;;;;;;;EAMe,SAAS4C,MAAT,CAAgBC,GAAhB,EAAqBC,OAArB,EAA8B;IAC3C;IACA,IAAMC,IAAI,GAAGjD,MAAM,CAACkD,MAAP,CAAc,EAAd,EAAkBR,QAAlB,EAA4BM,OAA5B,CAAb;IACA,IAAMG,QAAQ,GAAGvG,KAAK,CAACwG,IAAN,CAAWL,GAAX,CAAjB;IACA,IAAIM,MAAM,GAAG,KAAb;IAEA,IAAI,CAACN,GAAG,CAAC3I,MAAT,EAAiB;MACf,OAAO,EAAP;IACD;IAED,IAAI6I,IAAI,CAACb,SAAT,EAAoB;MAClB,OAAOA,SAAS,CAACW,GAAD,CAAhB;IACD,CAZ0C;IAe3C;;IACA,IAAI,OAAOE,IAAI,CAACL,EAAZ,KAAmB,UAAvB,EAAmC;MACjCG,GAAG,CAACO,IAAJ,CAAS,UAAC9F,CAAD,EAAIC,CAAJ,EAAU;QACjB;QACA,IAAI4F,MAAJ,EAAY;UACV,OAAO,CAAP;QACD;QAED,IAAME,IAAI,GAAGN,IAAI,CAACL,EAAL,CAAQpF,CAAC,CAACyF,IAAI,CAAC/C,GAAN,CAAT,CAAb;QACA,IAAMsD,IAAI,GAAGP,IAAI,CAACL,EAAL,CAAQnF,CAAC,CAACwF,IAAI,CAAC/C,GAAN,CAAT,CAAb,CAPiB;;QAUjB,IAAIqD,IAAI,KAAKE,SAAT,IAAsBD,IAAI,KAAKC,SAAnC,EAA8C;UAC5CJ,MAAM,GAAG,IAAT;UACA,OAAO,CAAP;QACD;QAED,IAAIE,IAAI,GAAGC,IAAP,IAAeD,IAAI,KAAK,WAAxB,IAAuCC,IAAI,KAAK,UAApD,EAAgE;UAC9D,OAAO,CAAC,CAAR;QACD;QAED,IAAID,IAAI,GAAGC,IAAP,IAAeD,IAAI,KAAK,UAAxB,IAAsCC,IAAI,KAAK,WAAnD,EAAgE;UAC9D,OAAO,CAAP;QACD;QAED,OAAO,CAAP;MACD,CAxBD;IAyBD,CA1BD,MA0BO,IAAI,OAAOP,IAAI,CAACJ,OAAZ,KAAwB,UAA5B,EAAwC;MAC7CE,GAAG,CAACO,IAAJ,CAASL,IAAI,CAACJ,OAAd;IACD,CA5C0C;;IA+C3C,IAAIQ,MAAJ,EAAY;MACV,OAAOF,QAAP;IACD;IAED,IAAIF,IAAI,CAACN,OAAT,EAAkB;MAChBI,GAAG,CAACJ,OAAJ;IACD;IAED,OAAOI,GAAP;EACD;ECrGD,IAAMW,WAAW,GAAG,EAApB;EACA,IAAMC,SAAS,GAAG,eAAlB;EACA,IAAIC,KAAK,GAAG,CAAZ;EAEA,SAASC,QAAT,GAAoB;IAClBD,KAAK,IAAI,CAAT;IACA,OAAOD,SAAS,GAAGC,KAAnB;EACD;EAEM,SAASE,mBAAT,CAA6BjG,EAA7B,EAAiC;IACtC,IAAI6F,WAAW,CAAC7F,EAAD,CAAf,EAAqB;MACnB6F,WAAW,CAAC7F,EAAD,CAAX,CAAgBU,OAAhB,CAAwBwF,mBAAxB,CAA4CJ,SAA5C,EAAuDD,WAAW,CAAC7F,EAAD,CAAX,CAAgBrE,QAAvE;MACAkK,WAAW,CAAC7F,EAAD,CAAX,GAAkB,IAAlB;MACA,OAAO,IAAP;IACD;IAED,OAAO,KAAP;EACD;EAEM,SAASmG,eAAT,CAAyBzF,OAAzB,EAAkCtF,QAAlC,EAA4C;IACjD,IAAM4E,EAAE,GAAGgG,QAAQ,EAAnB;IACA,IAAMrK,QAAQ,GAAG,SAAXA,QAAW,CAACyK,GAAD,EAAS;MACxB,IAAIA,GAAG,CAACC,aAAJ,KAAsBD,GAAG,CAACE,MAA9B,EAAsC;QACpCL,mBAAmB,CAACjG,EAAD,CAAnB;QACA5E,QAAQ,CAACgL,GAAD,CAAR;MACD;IACF,CALD;IAOA1F,OAAO,CAAC6F,gBAAR,CAAyBT,SAAzB,EAAoCnK,QAApC;IAEAkK,WAAW,CAAC7F,EAAD,CAAX,GAAkB;MAAEU,OAAO,EAAPA,OAAF;MAAW/E,QAAQ,EAARA;IAAX,CAAlB;IAEA,OAAOqE,EAAP;EACD;ECjCc,SAASwG,QAAT,CAAkBhC,KAAlB,EAAyB;IACtC,OAAOd,IAAI,CAAC+C,GAAL,CAAS5K,KAAT,CAAe6H,IAAf,EAAqBc,KAArB,CAAP,CADsC;EAEvC;;ECFc,SAASkC,QAAT,CAAkBlC,KAAlB,EAAyB;IACtC,OAAOd,IAAI,CAACiD,GAAL,CAAS9K,KAAT,CAAe6H,IAAf,EAAqBc,KAArB,CAAP,CADsC;EAEvC;;ECGD;;;;;;;;;EAQO,SAASoC,aAAT,CAAuBC,SAAvB,EAAkCC,WAAlC,EAA+CC,OAA/C,EAAwDC,SAAxD,EAAmE;IACxE,IAAIC,UAAU,GAAGJ,SAAS,GAAGC,WAA7B,CADwE;IAIxE;IACA;;IACA,IAAIpD,IAAI,CAACwD,GAAL,CAASxD,IAAI,CAACC,KAAL,CAAWsD,UAAX,IAAyBA,UAAlC,IAAgDD,SAApD,EAA+D;MAC7D;MACAC,UAAU,GAAGvD,IAAI,CAACC,KAAL,CAAWsD,UAAX,CAAb;IACD,CATuE;;IAYxE,OAAOvD,IAAI,CAACiD,GAAL,CAASjD,IAAI,CAACyD,IAAL,CAAUF,UAAV,CAAT,EAAgCF,OAAhC,CAAP;EACD;EAED;;;;;;;EAMO,SAASK,qBAAT,CAA+BC,SAA/B,EAA0CJ,UAA1C,EAAsDF,OAAtD,EAA+D;IACpE;IACA,IAAIE,UAAU,KAAK,CAAnB,EAAsB;MACpB,OAAOI,SAAP;IACD,CAJmE;IAOpE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,IAAMC,SAAS,GAAG,EAAlB,CA5BoE;;IA+BpE,KAAK,IAAIjL,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI0K,OAAO,GAAGE,UAA/B,EAA2C5K,CAAC,EAA5C,EAAgD;MAC9C;MACAiL,SAAS,CAAC/L,IAAV,CAAeiL,QAAQ,CAACa,SAAS,CAACnL,KAAV,CAAgBG,CAAhB,EAAmBA,CAAC,GAAG4K,UAAvB,CAAD,CAAvB;IACD;IAED,OAAOK,SAAP;EACD;EAED;;;;;;;;;EAQO,SAASC,cAAT,CAAwBF,SAAxB,EAAmCG,MAAnC,EAA2C;IAChD,IAAMC,WAAW,GAAGf,QAAQ,CAACW,SAAD,CAA5B;IACA,KAAK,IAAIhL,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG+K,SAAS,CAAC9K,MAAhC,EAAwCF,CAAC,GAAGC,GAA5C,EAAiDD,CAAC,EAAlD,EAAsD;MACpD,IAAIgL,SAAS,CAAChL,CAAD,CAAT,IAAgBoL,WAAW,GAAGD,MAA9B,IAAwCH,SAAS,CAAChL,CAAD,CAAT,IAAgBoL,WAAW,GAAGD,MAA1E,EAAkF;QAChF,OAAOnL,CAAP;MACD;IACF;IAED,OAAO,CAAP;EACD;EAED;;;;;;;;;;;EAUO,SAASqL,eAAT,OAEJ;IAAA,IADDC,QACC,QADDA,QACC;MADSN,SACT,QADSA,SACT;MADoBO,QACpB,QADoBA,QACpB;MAD8BC,KAC9B,QAD8BA,KAC9B;MADqCb,SACrC,QADqCA,SACrC;MADgDQ,MAChD,QADgDA,MAChD;IACD,IAAMM,IAAI,GAAGlB,aAAa,CAACe,QAAQ,CAACxH,KAAV,EAAiByH,QAAjB,EAA2BC,KAA3B,EAAkCb,SAAlC,CAA1B;IACA,IAAMe,IAAI,GAAGX,qBAAqB,CAACC,SAAD,EAAYS,IAAZ,EAAkBD,KAAlB,CAAlC;IACA,IAAMG,gBAAgB,GAAGT,cAAc,CAACQ,IAAD,EAAOP,MAAP,CAAvC,CAHC;;IAMD,IAAM3F,KAAK,GAAG,IAAItC,KAAJ,CAAUqI,QAAQ,GAAGI,gBAArB,EAAuCD,IAAI,CAACC,gBAAD,CAA3C,CAAd,CANC;IASD;IACA;;IACA,IAAMC,SAAS,GAAGF,IAAI,CAACC,gBAAD,CAAJ,GAAyBL,QAAQ,CAACvH,MAApD;IACA,KAAK,IAAI/D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyL,IAApB,EAA0BzL,CAAC,EAA3B,EAA+B;MAC7BgL,SAAS,CAACW,gBAAgB,GAAG3L,CAApB,CAAT,GAAkC4L,SAAlC;IACD;IAED,OAAOpG,KAAP;EACD;EAED;;;;;;;;;EAQO,SAASqG,oBAAT,CAA8BC,SAA9B,EAAyCC,cAAzC,EAAyD;IAC9D,IAAMC,MAAM,GAAG,EAAf,CAD8D;IAI9D;IACA;;IACAF,SAAS,CAACnJ,OAAV,CAAkB,UAACsJ,QAAD,EAAc;MAC9B,IAAID,MAAM,CAACC,QAAQ,CAACpI,GAAV,CAAV,EAA0B;QACxB;QACAmI,MAAM,CAACC,QAAQ,CAACpI,GAAV,CAAN,CAAqB3E,IAArB,CAA0B+M,QAA1B;MACD,CAHD,MAGO;QACL;QACAD,MAAM,CAACC,QAAQ,CAACpI,GAAV,CAAN,GAAuB,CAACoI,QAAD,CAAvB;MACD;IACF,CARD,EAN8D;IAiB9D;IACA;;IACA,IAAIC,KAAK,GAAG,EAAZ;IACA,IAAMC,IAAI,GAAG,EAAb;IACA,IAAMC,YAAY,GAAG,EAArB;IACAtG,MAAM,CAACC,IAAP,CAAYiG,MAAZ,EAAoBrJ,OAApB,CAA4B,UAACqD,GAAD,EAAS;MACnC,IAAM8F,SAAS,GAAGE,MAAM,CAAChG,GAAD,CAAxB;MACAmG,IAAI,CAACjN,IAAL,CAAU4M,SAAV;MACA,IAAMO,QAAQ,GAAGP,SAAS,CAACA,SAAS,CAAC5L,MAAV,GAAmB,CAApB,CAA1B;MACA,IAAMoM,GAAG,GAAGD,QAAQ,CAACzI,IAAT,GAAgByI,QAAQ,CAACvI,KAArC;MACA,IAAMyI,MAAM,GAAGlF,IAAI,CAACC,KAAL,CAAW,CAACyE,cAAc,GAAGO,GAAlB,IAAyB,CAApC,CAAf;MAEA,IAAIE,UAAU,GAAGV,SAAjB;MACA,IAAIW,OAAO,GAAG,KAAd;MACA,IAAIF,MAAM,GAAG,CAAb,EAAgB;QACd,IAAMG,QAAQ,GAAG,EAAjB;QACAD,OAAO,GAAGX,SAAS,CAACa,KAAV,CAAgB,UAACC,CAAD,EAAO;UAC/B,IAAMC,OAAO,GAAG,IAAIrJ,IAAJ,CAASoJ,CAAC,CAAChJ,IAAF,GAAS2I,MAAlB,EAA0BK,CAAC,CAAC/I,GAA5B,EAAiC+I,CAAC,CAAC9I,KAAnC,EAA0C8I,CAAC,CAAC7I,MAA5C,EAAoD6I,CAAC,CAACjJ,EAAtD,CAAhB,CAD+B;;UAI/B,IAAMmJ,SAAS,GAAG,CAACZ,KAAK,CAACa,IAAN,CAAW,UAACH,CAAD;YAAA,OAAOpJ,IAAI,CAACwJ,UAAL,CAAgBH,OAAhB,EAAyBD,CAAzB,CAAP;UAAA,CAAX,CAAnB;UAEAF,QAAQ,CAACxN,IAAT,CAAc2N,OAAd;UACA,OAAOC,SAAP;QACD,CARS,CAAV,CAFc;;QAad,IAAIL,OAAJ,EAAa;UACXD,UAAU,GAAGE,QAAb;QACD;MACF,CAzBkC;MA4BnC;MACA;;MACA,IAAI,CAACD,OAAL,EAAc;QACZ,IAAIQ,gBAAJ;QACA,IAAMC,UAAU,GAAGpB,SAAS,CAACiB,IAAV,CAAe,UAACd,QAAD;UAAA,OAAcC,KAAK,CAACa,IAAN,CAAW,UAACH,CAAD,EAAO;YAChE,IAAMI,UAAU,GAAGxJ,IAAI,CAACwJ,UAAL,CAAgBf,QAAhB,EAA0BW,CAA1B,CAAnB;YACA,IAAII,UAAJ,EAAgB;cACdC,gBAAgB,GAAGL,CAAnB;YACD;YACD,OAAOI,UAAP;UACD,CAN+C,CAAd;QAAA,CAAf,CAAnB,CAFY;;QAWZ,IAAIE,UAAJ,EAAgB;UACd,IAAMC,QAAQ,GAAGf,YAAY,CAACgB,SAAb,CAAuB,UAACC,KAAD;YAAA,OAAWA,KAAK,CAACC,QAAN,CAAeL,gBAAf,CAAX;UAAA,CAAvB,CAAjB;UACAb,YAAY,CAACmB,MAAb,CAAoBJ,QAApB,EAA8B,CAA9B,EAAiChB,IAAI,CAACgB,QAAD,CAArC;QACD;MACF;MAEDjB,KAAK,GAAGA,KAAK,CAACsB,MAAN,CAAahB,UAAb,CAAR;MACAJ,YAAY,CAAClN,IAAb,CAAkBsN,UAAlB;IACD,CAjDD,EAtB8D;IA0E9D;IACA;IACA;;IACA,OAAO,GAAGgB,MAAH,CAAUhO,KAAV,CAAgB,EAAhB,EAAoB4M,YAApB;IAAA,CACJhD,IADI,CACC,UAAC9F,CAAD,EAAIC,CAAJ;MAAA,OAAWD,CAAC,CAACK,EAAF,GAAOJ,CAAC,CAACI,EAApB;IAAA,CADD,EAEJ8J,GAFI,CAEA,UAACxB,QAAD;MAAA,OAAc,IAAI/I,KAAJ,CAAU+I,QAAQ,CAACrI,IAAnB,EAAyBqI,QAAQ,CAACpI,GAAlC,CAAd;IAAA,CAFA,CAAP;EAGD;;ECnND;;;;;;EAMe,SAAS6J,SAAT,CAAmBC,GAAnB,EAAwB;IACrC,OAAOA,GAAG,CAACC,OAAJ,CAAY,UAAZ,EAAwB,UAACD,GAAD,EAAME,EAAN;MAAA,kBAAiBA,EAAE,CAACC,WAAH,EAAjB;IAAA,CAAxB,CAAP;EACD;ECcD,SAASC,WAAT,CAAqB5K,CAArB,EAAwB;IACtB,OAAOT,KAAK,CAACwG,IAAN,CAAW,IAAI8E,GAAJ,CAAQ7K,CAAR,CAAX,CAAP;EACD;;EAGD,IAAIQ,EAAE,GAAG,CAAT;MAEMsK;;;;IACJ;;;;;;;IAOA,iBAAY5J,OAAZ,EAAmC;MAAA;MAAA,IAAdyE,OAAc,uEAAJ,EAAI;MAAAzF;MACjCsC,0BADiC;;MAGjCA,MAAKmD,OAAL,GAAehD,MAAM,CAACkD,MAAP,CAAc,EAAd,EAAkBiF,OAAO,CAACnF,OAA1B,EAAmCA,OAAnC,CAAf,CAHiC;MAMjC;;MACA,IAAInD,MAAKmD,OAAL,CAAaoF,SAAjB,EAA4B;QAC1BvI,MAAKmD,OAAL,CAAaqF,SAAb,GAAyBxI,MAAKmD,OAAL,CAAaoF,SAAtC;MACD;MAEDvI,MAAKyI,QAAL,GAAgB,EAAhB;MACAzI,MAAK0I,KAAL,GAAaJ,OAAO,CAACK,SAArB;MACA3I,MAAK4I,UAAL,GAAkBN,OAAO,CAACK,SAA1B;MACA3I,MAAK6I,SAAL,GAAiB,IAAjB;MACA7I,MAAK8I,WAAL,GAAmB,KAAnB;MACA9I,MAAK+I,aAAL,GAAqB,KAArB;MACA/I,MAAKgJ,YAAL,GAAoB,EAApB;MACAhJ,MAAKiJ,eAAL,GAAuB,KAAvB;MACAjJ,MAAKkJ,MAAL,GAAc,EAAd;MAEA,IAAM7N,EAAE,GAAG2E,MAAKmJ,iBAAL,CAAuBzK,OAAvB,CAAX;MAEA,IAAI,CAACrD,EAAL,EAAS;QACP,MAAM,IAAI+N,SAAJ,CAAc,kDAAd,CAAN;MACD;MAEDpJ,MAAKtB,OAAL,GAAerD,EAAf;MACA2E,MAAKhC,EAAL,GAAU,aAAaA,EAAvB;MACAA,EAAE,IAAI,CAAN;MAEAgC,MAAKqJ,KAAL;MACArJ,MAAK+I,aAAL,GAAqB,IAArB;MAhCiC;IAiClC;;;aAED,iBAAQ;QACN,KAAKrB,KAAL,GAAa,KAAK4B,SAAL,EAAb;QACA,KAAKC,WAAL,GAAmB,KAAK7B,KAAxB;QAEA,KAAKvE,OAAL,CAAaqG,KAAb,GAAqB,KAAKL,iBAAL,CAAuB,KAAKhG,OAAL,CAAaqG,KAApC,CAArB,CAJM;;QAON,KAAK9K,OAAL,CAAaI,SAAb,CAAuBG,GAAvB,CAA2BqJ,OAAO,CAACtJ,OAAR,CAAgBX,IAA3C,EAPM;;QAUN,KAAKoL,UAAL,CAAgB,KAAK/B,KAArB,EAVM;;QAaN,KAAKgC,SAAL,GAAiB,KAAKC,kBAAL,EAAjB;QACAnI,MAAM,CAAC+C,gBAAP,CAAwB,QAAxB,EAAkC,KAAKmF,SAAvC,EAdM;QAiBN;QACA;;QACA,IAAIxI,QAAQ,CAAC0I,UAAT,KAAwB,UAA5B,EAAwC;UACtC,IAAMC,MAAM,GAAG,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAf;UACAtI,MAAM,CAAC+C,gBAAP,CAAwB,MAAxB,EAAgC,SAASwF,MAAT,GAAkB;YAChDvI,MAAM,CAAC0C,mBAAP,CAA2B,MAA3B,EAAmC6F,MAAnC;YACAF,MAAM;UACP,CAHD;QAID,CAzBK;;QA4BN,IAAMG,YAAY,GAAGxI,MAAM,CAACC,gBAAP,CAAwB,KAAK/C,OAA7B,EAAsC,IAAtC,CAArB;QACA,IAAM0H,cAAc,GAAGkC,OAAO,CAAC2B,OAAR,CAAgB,KAAKvL,OAArB,EAA8BP,KAArD,CA7BM;;QAgCN,KAAK+L,eAAL,CAAqBF,YAArB,EAhCM;QAmCN;;QACA,KAAKG,WAAL,CAAiB/D,cAAjB,EApCM;;QAuCN,KAAKgE,MAAL,CAAY,KAAKjH,OAAL,CAAauF,KAAzB,EAAgC,KAAKvF,OAAL,CAAakH,WAA7C,EAvCM;QA0CN;QACA;QACA;;QACA,KAAK3L,OAAL,CAAa4L,WAAb,CA7CM;;QA8CN,KAAKC,kBAAL,CAAwB,KAAK7C,KAA7B;QACA,KAAKhJ,OAAL,CAAa6B,KAAb,CAAmBiK,UAAnB,oBAA0C,KAAKrH,OAAL,CAAasH,KAAvD,gBAAkE,KAAKtH,OAAL,CAAauH,MAA/E;MACD;MAED;;;;;;;aAKA,8BAAqB;QACnB,IAAMC,cAAc,GAAG,KAAKC,aAAL,CAAmBd,IAAnB,CAAwB,IAAxB,CAAvB;QACA,OAAO,KAAK3G,OAAL,CAAavH,QAAb,GACH,KAAKuH,OAAL,CAAavH,QAAb,CAAsB+O,cAAtB,EAAsC,KAAKxH,OAAL,CAAa0H,YAAnD,CADG,GAEHF,cAFJ;MAGD;MAED;;;;;;;;aAMA,2BAAkBG,MAAlB,EAA0B;QACxB;QACA;QACA,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;UAC9B,OAAO,KAAKpM,OAAL,CAAaqM,aAAb,CAA2BD,MAA3B,CAAP;QACD,CALuB;;QAQxB,IAAIA,MAAM,IAAIA,MAAM,CAACvP,QAAjB,IAA6BuP,MAAM,CAACvP,QAAP,KAAoB,CAArD,EAAwD;UACtD,OAAOuP,MAAP;QACD,CAVuB;;QAaxB,IAAIA,MAAM,IAAIA,MAAM,CAACE,MAArB,EAA6B;UAC3B,OAAOF,MAAM,CAAC,CAAD,CAAb;QACD;QAED,OAAO,IAAP;MACD;MAED;;;;;;;aAKA,yBAAgBhJ,MAAhB,EAAwB;QACtB;QACA,IAAIA,MAAM,CAACrB,QAAP,KAAoB,QAAxB,EAAkC;UAChC,KAAK/B,OAAL,CAAa6B,KAAb,CAAmBE,QAAnB,GAA8B,UAA9B;QACD,CAJqB;;QAOtB,IAAIqB,MAAM,CAACmJ,QAAP,KAAoB,QAAxB,EAAkC;UAChC,KAAKvM,OAAL,CAAa6B,KAAb,CAAmB0K,QAAnB,GAA8B,QAA9B;QACD;MACF;MAED;;;;;;;;;;;aASA,mBAA6D;QAAA,IAArDC,QAAqD,uEAA1C,KAAKtC,UAAqC;QAAA,IAAzBuC,UAAyB,uEAAZ,KAAKzD,KAAO;QAC3D,IAAM0D,GAAG,GAAG,KAAKC,gBAAL,CAAsBH,QAAtB,EAAgCC,UAAhC,CAAZ,CAD2D;;QAI3D,KAAKG,oBAAL,CAA0BF,GAA1B,EAJ2D;;QAO3D,KAAKxC,UAAL,GAAkBsC,QAAlB,CAP2D;QAU3D;;QACA,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;UAChC,KAAKxC,KAAL,GAAawC,QAAb;QACD;QAED,OAAOE,GAAP;MACD;MAED;;;;;;;;;aAOA,0BAAiBF,QAAjB,EAA2BxD,KAA3B,EAAkC;QAAA;QAChC,IAAI6D,OAAO,GAAG,EAAd;QACA,IAAMC,MAAM,GAAG,EAAf,CAFgC;;QAKhC,IAAIN,QAAQ,KAAK5C,OAAO,CAACK,SAAzB,EAAoC;UAClC4C,OAAO,GAAG7D,KAAV,CADkC;UAIlC;QACD,CALD,MAKO;UACLA,KAAK,CAAC1K,OAAN,CAAc,UAACyO,IAAD,EAAU;YACtB,IAAIxL,MAAI,CAACyL,eAAL,CAAqBR,QAArB,EAA+BO,IAAI,CAAC/M,OAApC,CAAJ,EAAkD;cAChD6M,OAAO,CAAChS,IAAR,CAAakS,IAAb;YACD,CAFD,MAEO;cACLD,MAAM,CAACjS,IAAP,CAAYkS,IAAZ;YACD;UACF,CAND;QAOD;QAED,OAAO;UACLF,OAAO,EAAPA,OADK;UAELC,MAAM,EAANA;QAFK,CAAP;MAID;MAED;;;;;;;;;aAOA,yBAAgBN,QAAhB,EAA0BxM,OAA1B,EAAmC;QACjC,IAAI,OAAOwM,QAAP,KAAoB,UAAxB,EAAoC;UAClC,OAAOA,QAAQ,CAAC/Q,IAAT,CAAcuE,OAAd,EAAuBA,OAAvB,EAAgC,IAAhC,CAAP;QACD,CAHgC;;QAMjC,IAAMiN,IAAI,GAAGjN,OAAO,CAACkN,YAAR,CAAqB,UAAUtD,OAAO,CAACuD,oBAAvC,CAAb;QACA,IAAMzL,IAAI,GAAG,KAAK+C,OAAL,CAAaqF,SAAb,GACTmD,IAAI,CAACG,KAAL,CAAW,KAAK3I,OAAL,CAAaqF,SAAxB,CADS,GAETuD,IAAI,CAACC,KAAL,CAAWL,IAAX,CAFJ;QAIA,SAASM,YAAT,CAAsBf,QAAtB,EAAgC;UAC9B,OAAO9K,IAAI,CAACuH,QAAL,CAAcuD,QAAd,CAAP;QACD;QAED,IAAInO,KAAK,CAACmP,OAAN,CAAchB,QAAd,CAAJ,EAA6B;UAC3B,IAAI,KAAK/H,OAAL,CAAagJ,UAAb,KAA4B7D,OAAO,CAAC8D,UAAR,CAAmBC,GAAnD,EAAwD;YACtD,OAAOnB,QAAQ,CAAC9D,IAAT,CAAc6E,YAAd,CAAP;UACD;UACD,OAAOf,QAAQ,CAAClE,KAAT,CAAeiF,YAAf,CAAP;QACD;QAED,OAAO7L,IAAI,CAACuH,QAAL,CAAcuD,QAAd,CAAP;MACD;MAED;;;;;;;aAKA,oCAA0C;QAAA,IAAnBK,OAAmB,QAAnBA,OAAmB;UAAVC,MAAU,QAAVA,MAAU;QACxCD,OAAO,CAACvO,OAAR,CAAgB,UAACyO,IAAD,EAAU;UACxBA,IAAI,CAACa,IAAL;QACD,CAFD;QAIAd,MAAM,CAACxO,OAAP,CAAe,UAACyO,IAAD,EAAU;UACvBA,IAAI,CAACc,IAAL;QACD,CAFD;MAGD;MAED;;;;;;;aAKA,oBAAW7E,KAAX,EAAkB;QAChBA,KAAK,CAAC1K,OAAN,CAAc,UAACyO,IAAD,EAAU;UACtBA,IAAI,CAACe,IAAL;QACD,CAFD;MAGD;MAED;;;;;;;aAKA,uBAAc9E,KAAd,EAAqB;QACnBA,KAAK,CAAC1K,OAAN,CAAc,UAACyO,IAAD,EAAU;UACtBA,IAAI,CAACgB,OAAL;QACD,CAFD;MAGD;MAED;;;;;;aAIA,4BAAmB;QACjB,KAAKC,YAAL,GAAoB,KAAKC,iBAAL,GAAyBpS,MAA7C;MACD;MAED;;;;;;;;;aAOA,4BAAmBmN,KAAnB,EAA0B;QACxB,oBAA0B,KAAKvE,OAA/B;UAAQsH,KAAR,iBAAQA,KAAR;UAAeC,MAAf,iBAAeA,MAAf;QACA,IAAMkC,aAAa,GAAG,KAAKzJ,OAAL,CAAa0J,aAAb,GAA6B,CAAC,WAAD,CAA7B,GAA6C,CAAC,KAAD,EAAQ,MAAR,CAAnE,CAFwB;QAKxB;;QACA,IAAMC,QAAQ,GAAG3M,MAAM,CAACC,IAAP,CAAY3B,WAAW,CAACa,GAAZ,CAAgBd,MAAhB,CAAuBqC,MAAnC,EAA2CiH,GAA3C,CAA+C,UAACiF,CAAD;UAAA,OAAOhF,SAAS,CAACgF,CAAD,CAAhB;QAAA,CAA/C,CAAjB;QACA,IAAMC,UAAU,GAAGJ,aAAa,CAAC/E,MAAd,CAAqBiF,QAArB,EAA+BG,IAA/B,EAAnB;QAEAvF,KAAK,CAAC1K,OAAN,CAAc,UAACyO,IAAD,EAAU;UACtBA,IAAI,CAAC/M,OAAL,CAAa6B,KAAb,CAAmB2M,kBAAnB,GAAwCzC,KAAK,GAAG,IAAhD;UACAgB,IAAI,CAAC/M,OAAL,CAAa6B,KAAb,CAAmB4M,wBAAnB,GAA8CzC,MAA9C;UACAe,IAAI,CAAC/M,OAAL,CAAa6B,KAAb,CAAmB6M,kBAAnB,GAAwCJ,UAAxC;QACD,CAJD;MAKD;;;aAED,qBAAY;QAAA;QACV,OAAOjQ,KAAK,CAACwG,IAAN,CAAW,KAAK7E,OAAL,CAAa2O,QAAxB,EACJjD,MADI,CACG,UAAC/O,EAAD;UAAA,OAAQP,eAAO,CAACO,EAAD,EAAKiF,MAAI,CAAC6C,OAAL,CAAamK,YAAlB,CAAf;QAAA,CADH,EAEJxF,GAFI,CAEA,UAACzM,EAAD;UAAA,OAAQ,IAAIoD,WAAJ,CAAgBpD,EAAhB,EAAoBiF,MAAI,CAAC6C,OAAL,CAAaxE,KAAjC,CAAR;QAAA,CAFA,CAAP;MAGD;MAED;;;;;;;aAKA,wBAAe+I,KAAf,EAAsB;QACpB,IAAM2F,QAAQ,GAAGtQ,KAAK,CAACwG,IAAN,CAAW,KAAK7E,OAAL,CAAa2O,QAAxB,CAAjB;QACA,OAAOpK,MAAM,CAAC,KAAKyE,KAAL,CAAWG,MAAX,CAAkBH,KAAlB,CAAD,EAA2B;UACtC3E,EADsC,cACnCrE,OADmC,EAC1B;YACV,OAAO2O,QAAQ,CAACE,OAAT,CAAiB7O,OAAjB,CAAP;UACD;QAHqC,CAA3B,CAAb;MAKD;;;aAED,6BAAoB;QAClB,OAAO,KAAKgJ,KAAL,CAAW0C,MAAX,CAAkB,UAACqB,IAAD;UAAA,OAAUA,IAAI,CAAC7M,SAAf;QAAA,CAAlB,CAAP;MACD;;;aAED,8BAAqB;QACnB,OAAO,KAAK8I,KAAL,CAAW0C,MAAX,CAAkB,UAACqB,IAAD;UAAA,OAAU,CAACA,IAAI,CAAC7M,SAAhB;QAAA,CAAlB,CAAP;MACD;MAED;;;;;;;;;aAOA,wBAAewH,cAAf,EAA+BoH,UAA/B,EAA2C;QACzC,IAAIC,IAAJ,CADyC;;QAIzC,IAAI,OAAO,KAAKtK,OAAL,CAAa2B,WAApB,KAAoC,UAAxC,EAAoD;UAClD2I,IAAI,GAAG,KAAKtK,OAAL,CAAa2B,WAAb,CAAyBsB,cAAzB,CAAP,CADkD;QAInD,CAJD,MAIO,IAAI,KAAKjD,OAAL,CAAaqG,KAAjB,EAAwB;UAC7BiE,IAAI,GAAGnF,OAAO,CAAC2B,OAAR,CAAgB,KAAK9G,OAAL,CAAaqG,KAA7B,EAAoCrL,KAA3C,CAD6B;QAI9B,CAJM,MAIA,IAAI,KAAKgF,OAAL,CAAa2B,WAAjB,EAA8B;UACnC2I,IAAI,GAAG,KAAKtK,OAAL,CAAa2B,WAApB,CADmC;QAIpC,CAJM,MAIA,IAAI,KAAK4C,KAAL,CAAWnN,MAAX,GAAoB,CAAxB,EAA2B;UAChCkT,IAAI,GAAGnF,OAAO,CAAC2B,OAAR,CAAgB,KAAKvC,KAAL,CAAW,CAAX,EAAchJ,OAA9B,EAAuC,IAAvC,EAA6CP,KAApD,CADgC;QAIjC,CAJM,MAIA;UACLsP,IAAI,GAAGrH,cAAP;QACD,CAtBwC;;QAyBzC,IAAIqH,IAAI,KAAK,CAAb,EAAgB;UACdA,IAAI,GAAGrH,cAAP;QACD;QAED,OAAOqH,IAAI,GAAGD,UAAd;MACD;MAED;;;;;;;;aAMA,wBAAepH,cAAf,EAA+B;QAC7B,IAAIqH,IAAJ;QACA,IAAI,OAAO,KAAKtK,OAAL,CAAauK,WAApB,KAAoC,UAAxC,EAAoD;UAClDD,IAAI,GAAG,KAAKtK,OAAL,CAAauK,WAAb,CAAyBtH,cAAzB,CAAP;QACD,CAFD,MAEO,IAAI,KAAKjD,OAAL,CAAaqG,KAAjB,EAAwB;UAC7BiE,IAAI,GAAG5L,cAAc,CAAC,KAAKsB,OAAL,CAAaqG,KAAd,EAAqB,YAArB,CAArB;QACD,CAFM,MAEA;UACLiE,IAAI,GAAG,KAAKtK,OAAL,CAAauK,WAApB;QACD;QAED,OAAOD,IAAP;MACD;MAED;;;;;;;aAKA,uBAAkE;QAAA,IAAtDrH,cAAsD,uEAArCkC,OAAO,CAAC2B,OAAR,CAAgB,KAAKvL,OAArB,EAA8BP,KAAO;QAChE,IAAMwP,MAAM,GAAG,KAAKC,cAAL,CAAoBxH,cAApB,CAAf;QACA,IAAMtB,WAAW,GAAG,KAAK+I,cAAL,CAAoBzH,cAApB,EAAoCuH,MAApC,CAApB;QACA,IAAIG,iBAAiB,GAAG,CAAC1H,cAAc,GAAGuH,MAAlB,IAA4B7I,WAApD,CAHgE;;QAMhE,IAAIpD,IAAI,CAACwD,GAAL,CAASxD,IAAI,CAACC,KAAL,CAAWmM,iBAAX,IAAgCA,iBAAzC,IAA8D,KAAK3K,OAAL,CAAa4K,eAA/E,EAAgG;UAC9F;UACAD,iBAAiB,GAAGpM,IAAI,CAACC,KAAL,CAAWmM,iBAAX,CAApB;QACD;QAED,KAAKE,IAAL,GAAYtM,IAAI,CAAC+C,GAAL,CAAS/C,IAAI,CAACgB,KAAL,CAAWoL,iBAAiB,IAAI,CAAhC,CAAT,EAA6C,CAA7C,CAAZ;QACA,KAAK1H,cAAL,GAAsBA,cAAtB;QACA,KAAK6H,QAAL,GAAgBnJ,WAAhB;MACD;MAED;;;;;aAGA,6BAAoB;QAClB,KAAKpG,OAAL,CAAa6B,KAAb,CAAmBnC,MAAnB,GAA4B,KAAK8P,iBAAL,KAA2B,IAAvD;MACD;MAED;;;;;;;aAKA,6BAAoB;QAClB,OAAO1J,QAAQ,CAAC,KAAKa,SAAN,CAAf;MACD;MAED;;;;;;;aAKA,2BAAkB8I,KAAlB,EAAyB;QACvB,OAAOzM,IAAI,CAACiD,GAAL,CAASwJ,KAAK,GAAG,KAAKhL,OAAL,CAAaiL,aAA9B,EAA6C,KAAKjL,OAAL,CAAakL,gBAA1D,CAAP;MACD;MAED;;;;;;;aAKA,mBAAUlV,IAAV,EAA2B;QAAA,IAAXc,IAAW,uEAAJ,EAAI;QACzB,IAAI,KAAK6O,WAAT,EAAsB;UACpB;QACD;QAED7O,IAAI,CAACqU,OAAL,GAAe,IAAf;QACA,KAAKtU,IAAL,CAAUb,IAAV,EAAgBc,IAAhB;MACD;MAED;;;;;;aAIA,sBAAa;QACX,IAAII,CAAC,GAAG,KAAK2T,IAAb;QACA,KAAK3I,SAAL,GAAiB,EAAjB;QACA,OAAOhL,CAAP,EAAU;UACRA,CAAC,IAAI,CAAL;UACA,KAAKgL,SAAL,CAAe9L,IAAf,CAAoB,CAApB;QACD;MACF;MAED;;;;;;;aAKA,iBAAQmO,KAAR,EAAe;QAAA;QACb,IAAM6G,aAAa,GAAG,KAAKC,iBAAL,CAAuB9G,KAAvB,CAAtB;QAEA,IAAI3D,KAAK,GAAG,CAAZ;QACA2D,KAAK,CAAC1K,OAAN,CAAc,UAACyO,IAAD,EAAOpR,CAAP,EAAa;UACzB,SAASjB,QAAT,GAAoB;YAClBqS,IAAI,CAACpM,QAAL,CAAcZ,WAAW,CAACa,GAAZ,CAAgBf,OAAhB,CAAwBwC,KAAtC;UACD,CAHwB;UAMzB;;UACA,IAAIxD,KAAK,CAACkR,MAAN,CAAahD,IAAI,CAAC5L,KAAlB,EAAyB0O,aAAa,CAAClU,CAAD,CAAtC,KAA8C,CAACoR,IAAI,CAAC5M,QAAxD,EAAkE;YAChE4M,IAAI,CAACpM,QAAL,CAAcZ,WAAW,CAACa,GAAZ,CAAgBf,OAAhB,CAAwBsC,MAAtC;YACAzH,QAAQ;YACR;UACD;UAEDqS,IAAI,CAAC5L,KAAL,GAAa0O,aAAa,CAAClU,CAAD,CAA1B;UACAoR,IAAI,CAAC9L,KAAL,GAAalB,WAAW,CAACmB,KAAZ,CAAkBrB,OAA/B;UACAkN,IAAI,CAAC5M,QAAL,GAAgB,KAAhB,CAfyB;UAkBzB;;UACA,IAAMiD,MAAM,GAAG4M,MAAI,CAACC,sBAAL,CAA4BlD,IAA5B,EAAkChN,WAAW,CAACa,GAAZ,CAAgBf,OAAhB,CAAwBsC,MAA1D,CAAf;UACAiB,MAAM,CAACd,eAAP,GAAyB0N,MAAI,CAACE,iBAAL,CAAuB7K,KAAvB,IAAgC,IAAzD;UAEA2K,MAAI,CAACxF,MAAL,CAAY3P,IAAZ,CAAiB;YACfkS,IAAI,EAAJA,IADe;YAEf3J,MAAM,EAANA,MAFe;YAGf1I,QAAQ,EAARA;UAHe,CAAjB;UAMA2K,KAAK,IAAI,CAAT;QACD,CA7BD;MA8BD;MAED;;;;;;;;;aAOA,2BAAkB2D,KAAlB,EAAyB;QAAA;;QACvB;QACA;QACA,IAAI,KAAKvE,OAAL,CAAa0L,UAAjB,EAA6B;UAC3B,IAAMC,SAAS,GAAGpH,KAAK,CAACI,GAAN,CAAU,UAAC2D,IAAD,EAAOpR,CAAP,EAAa;YACvC,IAAMsL,QAAQ,GAAG2C,OAAO,CAAC2B,OAAR,CAAgBwB,IAAI,CAAC/M,OAArB,EAA8B,IAA9B,CAAjB;YACA,IAAMmB,KAAK,GAAGkP,MAAI,CAACC,gBAAL,CAAsBrJ,QAAtB,CAAd;YACA,OAAO,IAAI9H,IAAJ,CAASgC,KAAK,CAACrC,CAAf,EAAkBqC,KAAK,CAACpC,CAAxB,EAA2BkI,QAAQ,CAACxH,KAApC,EAA2CwH,QAAQ,CAACvH,MAApD,EAA4D/D,CAA5D,CAAP;UACD,CAJiB,CAAlB;UAMA,OAAO,KAAK4U,uBAAL,CAA6BH,SAA7B,EAAwC,KAAK1I,cAA7C,CAAP;QACD,CAXsB;QAcvB;;QACA,OAAOsB,KAAK,CAACI,GAAN,CAAU,UAAC2D,IAAD;UAAA,OAAUsD,MAAI,CAACC,gBAAL,CAAsB1G,OAAO,CAAC2B,OAAR,CAAgBwB,IAAI,CAAC/M,OAArB,EAA8B,IAA9B,CAAtB,CAAV;QAAA,CAAV,CAAP;MACD;MAED;;;;;;;;aAMA,0BAAiBiH,QAAjB,EAA2B;QACzB,OAAOD,eAAe,CAAC;UACrBC,QAAQ,EAARA,QADqB;UAErBN,SAAS,EAAE,KAAKA,SAFK;UAGrBO,QAAQ,EAAE,KAAKqI,QAHM;UAIrBpI,KAAK,EAAE,KAAKmI,IAJS;UAKrBhJ,SAAS,EAAE,KAAK7B,OAAL,CAAa4K,eALH;UAMrBvI,MAAM,EAAE,KAAKrC,OAAL,CAAaqC;QANA,CAAD,CAAtB;MAQD;MAED;;;;;;;;;aAOA,iCAAwBW,SAAxB,EAAmCC,cAAnC,EAAmD;QACjD,OAAOF,oBAAoB,CAACC,SAAD,EAAYC,cAAZ,CAA3B;MACD;MAED;;;;;;;aAKA,mBAAgD;QAAA;QAAA,IAAxC+E,UAAwC,uEAA3B,KAAK+D,kBAAL,EAA2B;QAC9C,IAAInL,KAAK,GAAG,CAAZ;QACAoH,UAAU,CAACnO,OAAX,CAAmB,UAACyO,IAAD,EAAU;UAC3B,SAASrS,QAAT,GAAoB;YAClBqS,IAAI,CAACpM,QAAL,CAAcZ,WAAW,CAACa,GAAZ,CAAgBd,MAAhB,CAAuBuC,KAArC;UACD,CAH0B;UAM3B;UACA;UACA;UACA;UACA;;UACA,IAAI0K,IAAI,CAAC5M,QAAT,EAAmB;YACjB4M,IAAI,CAACpM,QAAL,CAAcZ,WAAW,CAACa,GAAZ,CAAgBd,MAAhB,CAAuBqC,MAArC;YACAzH,QAAQ;YACR;UACD;UAEDqS,IAAI,CAAC9L,KAAL,GAAalB,WAAW,CAACmB,KAAZ,CAAkBpB,MAA/B;UACAiN,IAAI,CAAC5M,QAAL,GAAgB,IAAhB;UAEA,IAAMiD,MAAM,GAAGqN,MAAI,CAACR,sBAAL,CAA4BlD,IAA5B,EAAkChN,WAAW,CAACa,GAAZ,CAAgBd,MAAhB,CAAuBqC,MAAzD,CAAf;UACAiB,MAAM,CAACd,eAAP,GAAyBmO,MAAI,CAACP,iBAAL,CAAuB7K,KAAvB,IAAgC,IAAzD;UAEAoL,MAAI,CAACjG,MAAL,CAAY3P,IAAZ,CAAiB;YACfkS,IAAI,EAAJA,IADe;YAEf3J,MAAM,EAANA,MAFe;YAGf1I,QAAQ,EAARA;UAHe,CAAjB;UAMA2K,KAAK,IAAI,CAAT;QACD,CA9BD;MA+BD;MAED;;;;;;aAIA,yBAAgB;QACd;QACA,IAAI,CAAC,KAAK8E,SAAN,IAAmB,KAAKC,WAA5B,EAAyC;UACvC;QACD;QAED,KAAKsG,MAAL;MACD;MAED;;;;;;;;;;aAQA,gCAAuB3D,IAAvB,EAA6B4D,WAA7B,EAA0C;QACxC;QACA;QACA,IAAMvN,MAAM,GAAG3B,MAAM,CAACkD,MAAP,CAAc,EAAd,EAAkBgM,WAAlB,CAAf;QAEA,IAAI,KAAKlM,OAAL,CAAa0J,aAAjB,EAAgC;UAC9B,IAAMyC,IAAI,GAAG,KAAKnM,OAAL,CAAaxE,KAAb,GAAqB,GAArB,GAA2B,EAAxC;UACA,IAAMnB,CAAC,GAAG,KAAK2F,OAAL,CAAaoM,eAAb,GAA+B7N,IAAI,CAACC,KAAL,CAAW8J,IAAI,CAAC5L,KAAL,CAAWrC,CAAtB,CAA/B,GAA0DiO,IAAI,CAAC5L,KAAL,CAAWrC,CAA/E;UACA,IAAMC,CAAC,GAAG,KAAK0F,OAAL,CAAaoM,eAAb,GAA+B7N,IAAI,CAACC,KAAL,CAAW8J,IAAI,CAAC5L,KAAL,CAAWpC,CAAtB,CAA/B,GAA0DgO,IAAI,CAAC5L,KAAL,CAAWpC,CAA/E;UACAqE,MAAM,CAAC0N,SAAP,uBAAgCF,IAAhC,SAAuC9R,CAAvC,iBAA+CC,CAA/C,uBAA6DgO,IAAI,CAAC9L,KAAlE;QACD,CALD,MAKO;UACL,IAAI,KAAKwD,OAAL,CAAaxE,KAAjB,EAAwB;YACtBmD,MAAM,CAAClB,KAAP,GAAe6K,IAAI,CAAC5L,KAAL,CAAWrC,CAAX,GAAe,IAA9B;UACD,CAFD,MAEO;YACLsE,MAAM,CAAC7D,IAAP,GAAcwN,IAAI,CAAC5L,KAAL,CAAWrC,CAAX,GAAe,IAA7B;UACD;UACDsE,MAAM,CAAC5D,GAAP,GAAauN,IAAI,CAAC5L,KAAL,CAAWpC,CAAX,GAAe,IAA5B;QACD;QAED,OAAOqE,MAAP;MACD;MAED;;;;;;;;;aAOA,6BAAoBpD,OAApB,EAA6B+Q,YAA7B,EAA2CC,IAA3C,EAAiD;QAC/C,IAAM1R,EAAE,GAAGmG,eAAe,CAACzF,OAAD,EAAU,UAAC0F,GAAD,EAAS;UAC3CqL,YAAY;UACZC,IAAI,CAAC,IAAD,EAAOtL,GAAP,CAAJ;QACD,CAHyB,CAA1B;QAKA,KAAK4E,YAAL,CAAkBzP,IAAlB,CAAuByE,EAAvB;MACD;MAED;;;;;;;;aAMA,gCAAuBoF,IAAvB,EAA6B;QAAA;QAC3B,OAAO,UAACsM,IAAD,EAAU;UACftM,IAAI,CAACqI,IAAL,CAAUpM,QAAV,CAAmB+D,IAAI,CAACtB,MAAxB;UACA6N,MAAI,CAACC,mBAAL,CAAyBxM,IAAI,CAACqI,IAAL,CAAU/M,OAAnC,EAA4C0E,IAAI,CAAChK,QAAjD,EAA2DsW,IAA3D;QACD,CAHD;MAID;MAED;;;;;;;aAKA,yBAAgB;QACd,IAAI,KAAKzG,eAAT,EAA0B;UACxB,KAAK4G,eAAL;QACD;QAED,IAAMC,QAAQ,GAAG,KAAK3M,OAAL,CAAasH,KAAb,GAAqB,CAAtC;QACA,IAAMsF,QAAQ,GAAG,KAAK7G,MAAL,CAAY3O,MAAZ,GAAqB,CAAtC;QAEA,IAAIwV,QAAQ,IAAID,QAAZ,IAAwB,KAAK/G,aAAjC,EAAgD;UAC9C,KAAKiH,iBAAL,CAAuB,KAAK9G,MAA5B;QACD,CAFD,MAEO,IAAI6G,QAAJ,EAAc;UACnB,KAAKE,iBAAL,CAAuB,KAAK/G,MAA5B;UACA,KAAKgH,SAAL,CAAe5H,OAAO,CAAC6H,SAAR,CAAkBC,MAAjC,EAFmB;UAKnB;UACA;QACD,CAPM,MAOA;UACL,KAAKF,SAAL,CAAe5H,OAAO,CAAC6H,SAAR,CAAkBC,MAAjC;QACD,CAnBa;;QAsBd,KAAKlH,MAAL,CAAY3O,MAAZ,GAAqB,CAArB;MACD;MAED;;;;;;aAIA,2BAAkBsJ,WAAlB,EAA+B;QAAA;;QAC7B;QACA,KAAKoF,eAAL,GAAuB,IAAvB,CAF6B;;QAK7B,IAAMoH,SAAS,GAAGxM,WAAW,CAACiE,GAAZ,CAAgB,UAAC5H,GAAD;UAAA,OAASoQ,MAAI,CAACC,sBAAL,CAA4BrQ,GAA5B,CAAT;QAAA,CAAhB,CAAlB;QAEA1D,aAAQ,CAAC6T,SAAD,EAAY,KAAKG,iBAAL,CAAuB1G,IAAvB,CAA4B,IAA5B,CAAZ,CAAR;MACD;;;aAED,2BAAkB;QAChB;QACA,KAAKd,YAAL,CAAkBhM,OAAlB,CAA0BiH,mBAA1B,EAFgB;;QAKhB,KAAK+E,YAAL,CAAkBzO,MAAlB,GAA2B,CAA3B,CALgB;;QAQhB,KAAK0O,eAAL,GAAuB,KAAvB;MACD;MAED;;;;;;;aAKA,2BAAkBwH,OAAlB,EAA2B;QACzB,IAAIA,OAAO,CAAClW,MAAZ,EAAoB;UAClB,IAAMmW,QAAQ,GAAGD,OAAO,CAAC3I,GAAR,CAAY,UAAC5H,GAAD;YAAA,OAASA,GAAG,CAACuL,IAAJ,CAAS/M,OAAlB;UAAA,CAAZ,CAAjB;UAEA4J,OAAO,CAACqI,gBAAR,CAAyBD,QAAzB,EAAmC,YAAM;YACvCD,OAAO,CAACzT,OAAR,CAAgB,UAACkD,GAAD,EAAS;cACvBA,GAAG,CAACuL,IAAJ,CAASpM,QAAT,CAAkBa,GAAG,CAAC4B,MAAtB;cACA5B,GAAG,CAAC9G,QAAJ;YACD,CAHD;UAID,CALD;QAMD;MACF;;;aAED,6BAAoB;QAClB,KAAK4P,YAAL,CAAkBzO,MAAlB,GAA2B,CAA3B;QACA,KAAK0O,eAAL,GAAuB,KAAvB;QACA,KAAKiH,SAAL,CAAe5H,OAAO,CAAC6H,SAAR,CAAkBC,MAAjC;MACD;MAED;;;;;;;;aAMA,gBAAOlF,QAAP,EAAiB0F,WAAjB,EAA8B;QAC5B,IAAI,CAAC,KAAK/H,SAAV,EAAqB;UACnB;QACD;QAED,IAAI,CAACqC,QAAD,IAAcA,QAAQ,IAAIA,QAAQ,CAAC3Q,MAAT,KAAoB,CAAlD,EAAsD;UACpD2Q,QAAQ,GAAG5C,OAAO,CAACK,SAAnB,CADoD;QAErD;;QAED,KAAKkI,OAAL,CAAa3F,QAAb,EAT4B;;QAY5B,KAAK4F,OAAL,GAZ4B;;QAe5B,KAAKC,gBAAL,GAf4B;;QAkB5B,KAAKtN,IAAL,CAAUmN,WAAV;MACD;MAED;;;;;;aAIA,gBAAkC;QAAA,IAA7BA,WAA6B,uEAAf,KAAKnI,QAAU;QAChC,IAAI,CAAC,KAAKI,SAAV,EAAqB;UACnB;QACD;QAED,KAAKmI,UAAL;QAEA,IAAMtJ,KAAK,GAAGzE,MAAM,CAAC,KAAK0J,iBAAL,EAAD,EAA2BiE,WAA3B,CAApB;QACA,KAAKrH,WAAL,GAAmB7B,KAAnB;QAEA,KAAKuJ,OAAL,CAAavJ,KAAb,EAVgC;QAahC;;QACA,KAAKwJ,aAAL,GAdgC;;QAiBhC,KAAKC,iBAAL;QAEA,KAAK1I,QAAL,GAAgBmI,WAAhB;MACD;MAED;;;;;;aAIA,kBAA6B;QAAA,IAAtBQ,YAAsB,uEAAP,KAAO;QAC3B,IAAI,KAAKvI,SAAT,EAAoB;UAClB,IAAI,CAACuI,YAAL,EAAmB;YACjB;YACA,KAAKjH,WAAL;UACD,CAJiB;;UAOlB,KAAK1G,IAAL;QACD;MACF;MAED;;;;;;;aAKA,kBAAS;QACP,KAAK2L,MAAL,CAAY,IAAZ;MACD;MAED;;;;;;;aAKA,aAAIiC,QAAJ,EAAc;QAAA;QACZ,IAAM3J,KAAK,GAAGU,WAAW,CAACiJ,QAAD,CAAX,CAAsBvJ,GAAtB,CAA0B,UAACzM,EAAD;UAAA,OAAQ,IAAIoD,WAAJ,CAAgBpD,EAAhB,EAAoBiW,MAAI,CAACnO,OAAL,CAAaxE,KAAjC,CAAR;QAAA,CAA1B,CAAd,CADY;;QAIZ,KAAK8K,UAAL,CAAgB/B,KAAhB,EAJY;;QAOZ,KAAKsJ,UAAL;QAEA,IAAMO,QAAQ,GAAG,KAAKC,cAAL,CAAoB9J,KAApB,CAAjB;QACA,IAAM6B,WAAW,GAAGtG,MAAM,CAACsO,QAAD,EAAW,KAAK9I,QAAhB,CAA1B;QACA,IAAMgJ,iBAAiB,GAAG,KAAKZ,OAAL,CAAa,KAAKjI,UAAlB,EAA8BW,WAA9B,CAA1B;QAEA,IAAMmI,SAAS,GAAG,SAAZA,SAAY,CAACjG,IAAD;UAAA,OAAU/D,KAAK,CAACC,QAAN,CAAe8D,IAAf,CAAV;QAAA,CAAlB;QACA,IAAMkG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAClG,IAAD,EAAU;UACjCA,IAAI,CAAC9L,KAAL,GAAalB,WAAW,CAACmB,KAAZ,CAAkBpB,MAA/B;UACAiN,IAAI,CAAC5M,QAAL,GAAgB,IAAhB;UACA4M,IAAI,CAACpM,QAAL,CAAcZ,WAAW,CAACa,GAAZ,CAAgBd,MAAhB,CAAuBqC,MAArC;UACA4K,IAAI,CAACpM,QAAL,CAAcZ,WAAW,CAACa,GAAZ,CAAgBd,MAAhB,CAAuBuC,KAArC;QACD,CALD,CAdY;QAsBZ;;QACA,IAAMwN,aAAa,GAAG,KAAKC,iBAAL,CAAuBiD,iBAAiB,CAAClG,OAAzC,CAAtB;QACAkG,iBAAiB,CAAClG,OAAlB,CAA0BvO,OAA1B,CAAkC,UAACyO,IAAD,EAAOpR,CAAP,EAAa;UAC7C,IAAIqX,SAAS,CAACjG,IAAD,CAAb,EAAqB;YACnBA,IAAI,CAAC5L,KAAL,GAAa0O,aAAa,CAAClU,CAAD,CAA1B;YACAsX,gBAAgB,CAAClG,IAAD,CAAhB;YACAA,IAAI,CAACpM,QAAL,CAAciS,MAAI,CAAC3C,sBAAL,CAA4BlD,IAA5B,EAAkC,EAAlC,CAAd;UACD;QACF,CAND;QAQAgG,iBAAiB,CAACjG,MAAlB,CAAyBxO,OAAzB,CAAiC,UAACyO,IAAD,EAAU;UACzC,IAAIiG,SAAS,CAACjG,IAAD,CAAb,EAAqB;YACnBkG,gBAAgB,CAAClG,IAAD,CAAhB;UACD;QACF,CAJD,EAhCY;;QAuCZ,KAAK/M,OAAL,CAAa4L,WAAb,CAvCY;QAyCZ;;QACA,KAAKC,kBAAL,CAAwB7C,KAAxB,EA1CY;;QA6CZ,KAAKA,KAAL,GAAa,KAAK8J,cAAL,CAAoB9J,KAApB,CAAb,CA7CY;;QAgDZ,KAAK0C,MAAL,CAAY,KAAKxB,UAAjB;MACD;MAED;;;;;aAGA,mBAAU;QACR,KAAKC,SAAL,GAAiB,KAAjB;MACD;MAED;;;;;;aAIA,kBAA8B;QAAA,IAAvB+I,cAAuB,uEAAN,IAAM;QAC5B,KAAK/I,SAAL,GAAiB,IAAjB;QACA,IAAI+I,cAAJ,EAAoB;UAClB,KAAKxC,MAAL;QACD;MACF;MAED;;;;;;;;aAMA,gBAAOsB,QAAP,EAAiB;QAAA;QACf,IAAI,CAACA,QAAQ,CAACnW,MAAd,EAAsB;UACpB;QACD;QAED,IAAM4Q,UAAU,GAAG/C,WAAW,CAACsI,QAAD,CAA9B;QAEA,IAAMmB,QAAQ,GAAG1G,UAAU,CACxBrD,GADc,CACV,UAACpJ,OAAD;UAAA,OAAaoT,OAAI,CAACC,gBAAL,CAAsBrT,OAAtB,CAAb;QAAA,CADU,EAEd0L,MAFc,CAEP,UAACqB,IAAD;UAAA,OAAU,CAAC,CAACA,IAAZ;QAAA,CAFO,CAAjB;QAIA,IAAMuG,YAAY,GAAG,SAAfA,YAAe,GAAM;UACzBF,OAAI,CAACG,aAAL,CAAmBJ,QAAnB,EADyB;;UAIzB1G,UAAU,CAACnO,OAAX,CAAmB,UAAC0B,OAAD,EAAa;YAC9BA,OAAO,CAACjD,UAAR,CAAmBmG,WAAnB,CAA+BlD,OAA/B;UACD,CAFD;UAIAoT,OAAI,CAAC5B,SAAL,CAAe5H,OAAO,CAAC6H,SAAR,CAAkB+B,OAAjC,EAA0C;YAAE/G,UAAU,EAAVA;UAAF,CAA1C;QACD,CATD,CAXe;;QAuBf,KAAKG,oBAAL,CAA0B;UACxBC,OAAO,EAAE,EADe;UAExBC,MAAM,EAAEqG;QAFgB,CAA1B;QAKA,KAAKf,OAAL,CAAae,QAAb;QAEA,KAAKpO,IAAL,GA9Be;QAiCf;;QACA,KAAKiE,KAAL,GAAa,KAAKA,KAAL,CAAW0C,MAAX,CAAkB,UAACqB,IAAD;UAAA,OAAU,CAACoG,QAAQ,CAAClK,QAAT,CAAkB8D,IAAlB,CAAX;QAAA,CAAlB,CAAb;QACA,KAAKsF,gBAAL;QAEA,KAAKtX,IAAL,CAAU6O,OAAO,CAAC6H,SAAR,CAAkBC,MAA5B,EAAoC4B,YAApC;MACD;MAED;;;;;;;aAKA,0BAAiBtT,OAAjB,EAA0B;QACxB,OAAO,KAAKgJ,KAAL,CAAWyK,IAAX,CAAgB,UAAC1G,IAAD;UAAA,OAAUA,IAAI,CAAC/M,OAAL,KAAiBA,OAA3B;QAAA,CAAhB,CAAP;MACD;MAED;;;;;;aAIA,sBAAa;QAAA;;QACX;QACA,KAAKuT,aAAL,CAAmB,KAAKvK,KAAxB;QACA,KAAKqB,aAAL,GAAqB,KAArB,CAHW;;QAMX,KAAKrB,KAAL,GAAa,KAAK4B,SAAL,EAAb,CANW;;QASX,KAAKG,UAAL,CAAgB,KAAK/B,KAArB;QAEA,KAAKjO,IAAL,CAAU6O,OAAO,CAAC6H,SAAR,CAAkBC,MAA5B,EAAoC,YAAM;UACxC;UACAgC,OAAI,CAAC7H,kBAAL,CAAwB6H,OAAI,CAAC1K,KAA7B;UACA0K,OAAI,CAACrJ,aAAL,GAAqB,IAArB;QACD,CAJD,EAXW;;QAkBX,KAAKqB,MAAL,CAAY,KAAKxB,UAAjB;MACD;MAED;;;;;aAGA,mBAAU;QACR,KAAKiH,eAAL;QACArO,MAAM,CAAC0C,mBAAP,CAA2B,QAA3B,EAAqC,KAAKwF,SAA1C,EAFQ;;QAKR,KAAKhL,OAAL,CAAaI,SAAb,CAAuBC,MAAvB,CAA8B,SAA9B;QACA,KAAKL,OAAL,CAAaQ,eAAb,CAA6B,OAA7B,EANQ;;QASR,KAAK+S,aAAL,CAAmB,KAAKvK,KAAxB;QAEA,KAAKA,KAAL,CAAWnN,MAAX,GAAoB,CAApB;QACA,KAAKyO,YAAL,CAAkBzO,MAAlB,GAA2B,CAA3B,CAZQ;;QAeR,KAAK4I,OAAL,CAAaqG,KAAb,GAAqB,IAArB;QACA,KAAK9K,OAAL,GAAe,IAAf,CAhBQ;QAmBR;;QACA,KAAKoK,WAAL,GAAmB,IAAnB;QACA,KAAKD,SAAL,GAAiB,KAAjB;MACD;MAED;;;;;;;;;;;;;;;;;;;;;;;;aAsBA,iBAAenK,OAAf,EAAgD;QAAA,IAAxB2T,cAAwB,uEAAP,KAAO;QAC9C;QACA,IAAMvQ,MAAM,GAAGN,MAAM,CAACC,gBAAP,CAAwB/C,OAAxB,EAAiC,IAAjC,CAAf;QACA,IAAIP,KAAK,GAAG0D,cAAc,CAACnD,OAAD,EAAU,OAAV,EAAmBoD,MAAnB,CAA1B;QACA,IAAI1D,MAAM,GAAGyD,cAAc,CAACnD,OAAD,EAAU,QAAV,EAAoBoD,MAApB,CAA3B;QAEA,IAAIuQ,cAAJ,EAAoB;UAClB,IAAMC,UAAU,GAAGzQ,cAAc,CAACnD,OAAD,EAAU,YAAV,EAAwBoD,MAAxB,CAAjC;UACA,IAAMyQ,WAAW,GAAG1Q,cAAc,CAACnD,OAAD,EAAU,aAAV,EAAyBoD,MAAzB,CAAlC;UACA,IAAM0Q,SAAS,GAAG3Q,cAAc,CAACnD,OAAD,EAAU,WAAV,EAAuBoD,MAAvB,CAAhC;UACA,IAAM2Q,YAAY,GAAG5Q,cAAc,CAACnD,OAAD,EAAU,cAAV,EAA0BoD,MAA1B,CAAnC;UACA3D,KAAK,IAAImU,UAAU,GAAGC,WAAtB;UACAnU,MAAM,IAAIoU,SAAS,GAAGC,YAAtB;QACD;QAED,OAAO;UACLtU,KAAK,EAALA,KADK;UAELC,MAAM,EAANA;QAFK,CAAP;MAID;MAED;;;;;;;;;aAOA,0BAAwBsS,QAAxB,EAAkCtX,QAAlC,EAA4C;QAC1C,IAAMsZ,IAAI,GAAG,KAAb,CAD0C;;QAI1C,IAAMzY,IAAI,GAAGyW,QAAQ,CAAC5I,GAAT,CAAa,UAACpJ,OAAD,EAAa;UACrC,IAAQ6B,KAAR,GAAkB7B,OAAlB,CAAQ6B,KAAR;UACA,IAAMoS,QAAQ,GAAGpS,KAAK,CAAC2M,kBAAvB;UACA,IAAM0F,KAAK,GAAGrS,KAAK,CAACS,eAApB,CAHqC;;UAMrCT,KAAK,CAAC2M,kBAAN,GAA2BwF,IAA3B;UACAnS,KAAK,CAACS,eAAN,GAAwB0R,IAAxB;UAEA,OAAO;YACLC,QAAQ,EAARA,QADK;YAELC,KAAK,EAALA;UAFK,CAAP;QAID,CAbY,CAAb;QAeAxZ,QAAQ,GAnBkC;;QAsB1CsX,QAAQ,CAAC,CAAD,CAAR,CAAYpG,WAAZ,CAtB0C;QAwB1C;;QACAoG,QAAQ,CAAC1T,OAAT,CAAiB,UAAC0B,OAAD,EAAUrE,CAAV,EAAgB;UAC/BqE,OAAO,CAAC6B,KAAR,CAAc2M,kBAAd,GAAmCjT,IAAI,CAACI,CAAD,CAAJ,CAAQsY,QAA3C;UACAjU,OAAO,CAAC6B,KAAR,CAAcS,eAAd,GAAgC/G,IAAI,CAACI,CAAD,CAAJ,CAAQuY,KAAxC;QACD,CAHD;MAID;;;IAlkCmBC;EAqkCtBvK,OAAO,CAAC7J,WAAR,GAAsBA,WAAtB;EAEA6J,OAAO,CAACK,SAAR,GAAoB,KAApB;EACAL,OAAO,CAACuD,oBAAR,GAA+B,QAA/B;EAEA;;EACAvD,OAAO,CAAC6H,SAAR,GAAoB;IAClBC,MAAM,EAAE,gBADU;IAElB8B,OAAO,EAAE;EAFS,CAApB;EAKA;;EACA5J,OAAO,CAACtJ,OAAR,GAAkBA,OAAlB;EAEA;;EACAsJ,OAAO,CAAC8D,UAAR,GAAqB;IACnBC,GAAG,EAAE,KADc;IAEnByG,GAAG,EAAE;EAFc,CAArB;;EAMAxK,OAAO,CAACnF,OAAR,GAAkB;IAChB;IACAuF,KAAK,EAAEJ,OAAO,CAACK,SAFC;IAIhB;IACA8B,KAAK,EAAE,GALS;IAOhB;IACAC,MAAM,EAAE,gCARQ;IAUhB;IACA4C,YAAY,EAAE,GAXE;IAahB;IACA;IACA9D,KAAK,EAAE,IAfS;IAiBhB;IACA;IACAkE,WAAW,EAAE,CAnBG;IAqBhB;IACA;IACA5I,WAAW,EAAE,CAvBG;IAyBhB;IACA;IACA0D,SAAS,EAAE,IA3BK;IA6BhB;IACA;IACAhD,MAAM,EAAE,CA/BQ;IAiChB;IACA;IACAuI,eAAe,EAAE,IAnCD;IAqChB;IACA;IACA1D,WAAW,EAAE,IAvCG;IAyChB;IACA;IACAzO,QAAQ,EAARA,UA3CgB;IA6ChB;IACAiP,YAAY,EAAE,GA9CE;IAgDhB;IACAuD,aAAa,EAAE,EAjDC;IAmDhB;IACAC,gBAAgB,EAAE,GApDF;IAsDhB;IACAxB,aAAa,EAAE,IAvDC;IAyDhB;IACA;IACA;IACAV,UAAU,EAAE7D,OAAO,CAAC8D,UAAR,CAAmBC,GA5Df;IA8DhB;IACAwC,UAAU,EAAE,KA/DI;IAiEhB;IACAlQ,KAAK,EAAE,KAlES;IAoEhB;IACA;IACA4Q,eAAe,EAAE;EAtED,CAAlB;EAyEAjH,OAAO,CAAC/K,KAAR,GAAgBA,KAAhB;EACA+K,OAAO,CAACzK,IAAR,GAAeA,IAAf;;EAGAyK,OAAO,CAACyK,QAAR,GAAmB9P,MAAnB;EACAqF,OAAO,CAAC0K,eAAR,GAA0BpO,aAA1B;EACA0D,OAAO,CAAC2K,uBAAR,GAAkC7N,qBAAlC;EACAkD,OAAO,CAAC4K,gBAAR,GAA2B3N,cAA3B;EACA+C,OAAO,CAAC6K,sBAAR,GAAiCjN,oBAAjC","names":["E","prototype","on","name","callback","ctx","e","push","fn","once","self","listener","off","apply","arguments","_","emit","data","slice","call","evtArr","i","len","length","evts","liveEvents","tinyEmitterModule","proto","Element","vendor","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","match","el","selector","nodeType","nodes","parentNode","querySelectorAll","throttleit","throttle","func","wait","args","rtn","timeoutID","last","throttled","delta","Date","setTimeout","arrayParallel","parallel","fns","context","noop","pending","finished","results","Array","forEach","maybeDone","err","result","getNumber","value","parseFloat","Point","x","y","_classCallCheck","a","b","Rect","w","h","id","left","top","width","height","BASE","SHUFFLE_ITEM","VISIBLE","HIDDEN","ShuffleItem","element","isRTL","isVisible","isHidden","classList","remove","Classes","add","removeAttribute","setAttribute","addClasses","applyCss","Css","INITIAL","DIRECTION","rtl","ltr","scale","Scale","point","classes","className","_this","_this2","obj","Object","keys","key","_this3","style","removeClasses","position","visibility","willChange","right","before","opacity","after","transitionDelay","testComputedSize","document","body","documentElement","createElement","cssText","appendChild","window","getComputedStyle","Math","round","removeChild","getNumberStyle","styles","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","randomize","array","n","floor","random","temp","defaults","reverse","by","compare","sorter","arr","options","opts","assign","original","from","revert","sort","valA","valB","undefined","transitions","eventName","count","uniqueId","cancelTransitionEnd","removeEventListener","onTransitionEnd","evt","currentTarget","target","addEventListener","arrayMax","max","arrayMin","min","getColumnSpan","itemWidth","columnWidth","columns","threshold","columnSpan","abs","ceil","getAvailablePositions","positions","available","getShortColumn","buffer","minPosition","getItemPosition","itemSize","gridSize","total","span","setY","shortColumnIndex","setHeight","getCenteredPositions","itemRects","containerWidth","rowMap","itemRect","rects","rows","centeredRows","lastItem","end","offset","finalRects","canMove","newRects","every","r","newRect","noOverlap","some","intersects","intersectingRect","hasOverlap","rowIndex","findIndex","items","includes","splice","concat","map","hyphenate","str","replace","m1","toLowerCase","arrayUnique","Set","Shuffle","delimeter","delimiter","lastSort","group","ALL_ITEMS","lastFilter","isEnabled","isDestroyed","isInitialized","_transitions","isTransitioning","_queue","_getElementOption","TypeError","_init","_getItems","sortedItems","sizer","_initItems","_onResize","_getResizeFunction","readyState","layout","bind","onLoad","containerCss","getSize","_validateStyles","_setColumns","filter","initialSort","offsetWidth","setItemTransitions","transition","speed","easing","resizeFunction","_handleResize","throttleTime","option","querySelector","jquery","overflow","category","collection","set","_getFilteredSets","_toggleFilterClasses","visible","hidden","item","_doesPassFilter","attr","getAttribute","FILTER_ATTRIBUTE_KEY","split","JSON","parse","testCategory","isArray","filterMode","FilterMode","ANY","show","hide","init","dispose","visibleItems","_getFilteredItems","positionProps","useTransforms","cssProps","k","properties","join","transitionDuration","transitionTimingFunction","transitionProperty","children","itemSelector","indexOf","gutterSize","size","gutterWidth","gutter","_getGutterSize","_getColumnSize","calculatedColumns","columnThreshold","cols","colWidth","_getContainerSize","index","staggerAmount","staggerAmountMax","shuffle","itemPositions","_getNextPositions","equals","_this4","getStylesForTransition","_getStaggerAmount","isCentered","itemsData","_this5","_getItemPosition","getTransformedPositions","_getConcealedItems","_this6","update","styleObject","sign","roundTransforms","transform","itemCallback","done","_this7","_whenTransitionDone","_cancelMovement","hasSpeed","hasQueue","_startTransitions","_styleImmediately","_dispatch","EventType","LAYOUT","callbacks","_this8","_getTransitionFunction","_movementFinished","objects","elements","_skipTransitions","sortOptions","_filter","_shrink","_updateItemCount","_resetCols","_layout","_processQueue","_setContainerSize","isOnlyLayout","newItems","_this9","allItems","_mergeNewItems","allSortedItemsSet","isNewItem","applyHiddenState","isUpdateLayout","oldItems","_this10","getItemByElement","handleLayout","_disposeItems","REMOVED","find","_this11","includeMargins","marginLeft","marginRight","marginTop","marginBottom","zero","duration","delay","TinyEmitter","ALL","__sorter","__getColumnSpan","__getAvailablePositions","__getShortColumn","__getCenteredPositions"],"sources":["../node_modules/tiny-emitter/index.js","../node_modules/matches-selector/index.js","../node_modules/throttleit/index.js","../node_modules/array-parallel/index.js","../src/get-number.js","../src/point.js","../src/rect.js","../src/classes.js","../src/shuffle-item.js","../src/computed-size.js","../src/get-number-style.js","../src/sorter.js","../src/on-transition-end.js","../src/array-max.js","../src/array-min.js","../src/layout.js","../src/hyphenate.js","../src/shuffle.js"],"sourcesContent":["function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","'use strict';\n\nvar proto = typeof Element !== 'undefined' ? Element.prototype : {};\nvar vendor = proto.matches\n  || proto.matchesSelector\n  || proto.webkitMatchesSelector\n  || proto.mozMatchesSelector\n  || proto.msMatchesSelector\n  || proto.oMatchesSelector;\n\nmodule.exports = match;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match(el, selector) {\n  if (!el || el.nodeType !== 1) return false;\n  if (vendor) return vendor.call(el, selector);\n  var nodes = el.parentNode.querySelectorAll(selector);\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}\n","module.exports = throttle;\n\n/**\n * Returns a new function that, when invoked, invokes `func` at most once per `wait` milliseconds.\n *\n * @param {Function} func Function to wrap.\n * @param {Number} wait Number of milliseconds that must elapse between `func` invocations.\n * @return {Function} A new function that wraps the `func` function passed in.\n */\n\nfunction throttle (func, wait) {\n  var ctx, args, rtn, timeoutID; // caching\n  var last = 0;\n\n  return function throttled () {\n    ctx = this;\n    args = arguments;\n    var delta = new Date() - last;\n    if (!timeoutID)\n      if (delta >= wait) call();\n      else timeoutID = setTimeout(call, wait - delta);\n    return rtn;\n  };\n\n  function call () {\n    timeoutID = 0;\n    last = +new Date();\n    rtn = func.apply(ctx, args);\n    ctx = null;\n    args = null;\n  }\n}\n","module.exports = function parallel(fns, context, callback) {\n  if (!callback) {\n    if (typeof context === 'function') {\n      callback = context\n      context = null\n    } else {\n      callback = noop\n    }\n  }\n\n  var pending = fns && fns.length\n  if (!pending) return callback(null, []);\n\n  var finished = false\n  var results = new Array(pending)\n\n  fns.forEach(context ? function (fn, i) {\n    fn.call(context, maybeDone(i))\n  } : function (fn, i) {\n    fn(maybeDone(i))\n  })\n\n  function maybeDone(i) {\n    return function (err, result) {\n      if (finished) return;\n\n      if (err) {\n        callback(err, results)\n        finished = true\n        return\n      }\n\n      results[i] = result\n\n      if (!--pending) callback(null, results);\n    }\n  }\n}\n\nfunction noop() {}\n","/**\n * Always returns a numeric value, given a value. Logic from jQuery's `isNumeric`.\n * @param {*} value Possibly numeric value.\n * @return {number} `value` or zero if `value` isn't numeric.\n */\nexport default function getNumber(value) {\n  return parseFloat(value) || 0;\n}\n","import getNumber from './get-number';\n\nclass Point {\n  /**\n   * Represents a coordinate pair.\n   * @param {number} [x=0] X.\n   * @param {number} [y=0] Y.\n   */\n  constructor(x, y) {\n    this.x = getNumber(x);\n    this.y = getNumber(y);\n  }\n\n  /**\n   * Whether two points are equal.\n   * @param {Point} a Point A.\n   * @param {Point} b Point B.\n   * @return {boolean}\n   */\n  static equals(a, b) {\n    return a.x === b.x && a.y === b.y;\n  }\n}\n\nexport default Point;\n","export default class Rect {\n  /**\n   * Class for representing rectangular regions.\n   * https://github.com/google/closure-library/blob/master/closure/goog/math/rect.js\n   * @param {number} x Left.\n   * @param {number} y Top.\n   * @param {number} w Width.\n   * @param {number} h Height.\n   * @param {number} id Identifier\n   * @constructor\n   */\n  constructor(x, y, w, h, id) {\n    this.id = id;\n\n    /** @type {number} */\n    this.left = x;\n\n    /** @type {number} */\n    this.top = y;\n\n    /** @type {number} */\n    this.width = w;\n\n    /** @type {number} */\n    this.height = h;\n  }\n\n  /**\n   * Returns whether two rectangles intersect.\n   * @param {Rect} a A Rectangle.\n   * @param {Rect} b A Rectangle.\n   * @return {boolean} Whether a and b intersect.\n   */\n  static intersects(a, b) {\n    return (\n      a.left < b.left + b.width && b.left < a.left + a.width\n      && a.top < b.top + b.height && b.top < a.top + a.height);\n  }\n}\n","export default {\n  BASE: 'shuffle',\n  SHUFFLE_ITEM: 'shuffle-item',\n  VISIBLE: 'shuffle-item--visible',\n  HIDDEN: 'shuffle-item--hidden',\n};\n","import Point from './point';\nimport Classes from './classes';\n\nlet id = 0;\n\nclass ShuffleItem {\n  constructor(element, isRTL) {\n    id += 1;\n    this.id = id;\n    this.element = element;\n\n    /**\n     * Set correct direction of item\n     */\n    this.isRTL = isRTL;\n\n    /**\n     * Used to separate items for layout and shrink.\n     */\n    this.isVisible = true;\n\n    /**\n     * Used to determine if a transition will happen. By the time the _layout\n     * and _shrink methods get the ShuffleItem instances, the `isVisible` value\n     * has already been changed by the separation methods, so this property is\n     * needed to know if the item was visible/hidden before the shrink/layout.\n     */\n    this.isHidden = false;\n  }\n\n  show() {\n    this.isVisible = true;\n    this.element.classList.remove(Classes.HIDDEN);\n    this.element.classList.add(Classes.VISIBLE);\n    this.element.removeAttribute('aria-hidden');\n  }\n\n  hide() {\n    this.isVisible = false;\n    this.element.classList.remove(Classes.VISIBLE);\n    this.element.classList.add(Classes.HIDDEN);\n    this.element.setAttribute('aria-hidden', true);\n  }\n\n  init() {\n    this.addClasses([Classes.SHUFFLE_ITEM, Classes.VISIBLE]);\n    this.applyCss(ShuffleItem.Css.INITIAL);\n    this.applyCss(this.isRTL ? ShuffleItem.Css.DIRECTION.rtl : ShuffleItem.Css.DIRECTION.ltr);\n    this.scale = ShuffleItem.Scale.VISIBLE;\n    this.point = new Point();\n  }\n\n  addClasses(classes) {\n    classes.forEach((className) => {\n      this.element.classList.add(className);\n    });\n  }\n\n  removeClasses(classes) {\n    classes.forEach((className) => {\n      this.element.classList.remove(className);\n    });\n  }\n\n  applyCss(obj) {\n    Object.keys(obj).forEach((key) => {\n      this.element.style[key] = obj[key];\n    });\n  }\n\n  dispose() {\n    this.removeClasses([\n      Classes.HIDDEN,\n      Classes.VISIBLE,\n      Classes.SHUFFLE_ITEM,\n    ]);\n\n    this.element.removeAttribute('style');\n    this.element = null;\n  }\n}\n\nShuffleItem.Css = {\n  INITIAL: {\n    position: 'absolute',\n    top: 0,\n    visibility: 'visible',\n    willChange: 'transform',\n  },\n  DIRECTION: {\n    ltr: {\n      left: 0,\n    },\n    rtl: {\n      right: 0,\n    },\n  },\n  VISIBLE: {\n    before: {\n      opacity: 1,\n      visibility: 'visible',\n    },\n    after: {\n      transitionDelay: '',\n    },\n  },\n  HIDDEN: {\n    before: {\n      opacity: 0,\n    },\n    after: {\n      visibility: 'hidden',\n      transitionDelay: '',\n    },\n  },\n};\n\nShuffleItem.Scale = {\n  VISIBLE: 1,\n  HIDDEN: 0.001,\n};\n\nexport default ShuffleItem;\n","import getNumber from './get-number';\n\nlet value = null;\nexport default () => {\n  if (value !== null) {\n    return value;\n  }\n\n  const element = document.body || document.documentElement;\n  const e = document.createElement('div');\n  e.style.cssText = 'width:10px;padding:2px;box-sizing:border-box;';\n  element.appendChild(e);\n\n  const { width } = window.getComputedStyle(e, null);\n  // Fix for issue #314\n  value = Math.round(getNumber(width)) === 10;\n\n  element.removeChild(e);\n\n  return value;\n};\n","import getNumber from './get-number';\nimport testComputedSize from './computed-size';\n\n/**\n * Retrieve the computed style for an element, parsed as a float.\n * @param {Element} element Element to get style for.\n * @param {string} style Style property.\n * @param {CSSStyleDeclaration} [styles] Optionally include clean styles to\n *     use instead of asking for them again.\n * @return {number} The parsed computed value or zero if that fails because IE\n *     will return 'auto' when the element doesn't have margins instead of\n *     the computed style.\n */\nexport default function getNumberStyle(\n  element, style,\n  styles = window.getComputedStyle(element, null),\n) {\n  let value = getNumber(styles[style]);\n\n  // Support IE<=11 and W3C spec.\n  if (!testComputedSize() && style === 'width') {\n    value += getNumber(styles.paddingLeft)\n      + getNumber(styles.paddingRight)\n      + getNumber(styles.borderLeftWidth)\n      + getNumber(styles.borderRightWidth);\n  } else if (!testComputedSize() && style === 'height') {\n    value += getNumber(styles.paddingTop)\n      + getNumber(styles.paddingBottom)\n      + getNumber(styles.borderTopWidth)\n      + getNumber(styles.borderBottomWidth);\n  }\n\n  return value;\n}\n","/**\n * Fisher-Yates shuffle.\n * http://stackoverflow.com/a/962890/373422\n * https://bost.ocks.org/mike/shuffle/\n * @param {Array} array Array to shuffle.\n * @return {Array} Randomly sorted array.\n */\nfunction randomize(array) {\n  let n = array.length;\n\n  while (n) {\n    n -= 1;\n    const i = Math.floor(Math.random() * (n + 1));\n    const temp = array[i];\n    array[i] = array[n];\n    array[n] = temp;\n  }\n\n  return array;\n}\n\nconst defaults = {\n  // Use array.reverse() to reverse the results\n  reverse: false,\n\n  // Sorting function\n  by: null,\n\n  // Custom sort function\n  compare: null,\n\n  // If true, this will skip the sorting and return a randomized order in the array\n  randomize: false,\n\n  // Determines which property of each item in the array is passed to the\n  // sorting method.\n  key: 'element',\n};\n\n/**\n * You can return `undefined` from the `by` function to revert to DOM order.\n * @param {Array<T>} arr Array to sort.\n * @param {SortOptions} options Sorting options.\n * @return {Array<T>}\n */\nexport default function sorter(arr, options) {\n  // eslint-disable-next-line prefer-object-spread\n  const opts = Object.assign({}, defaults, options);\n  const original = Array.from(arr);\n  let revert = false;\n\n  if (!arr.length) {\n    return [];\n  }\n\n  if (opts.randomize) {\n    return randomize(arr);\n  }\n\n  // Sort the elements by the opts.by function.\n  // If we don't have opts.by, default to DOM order\n  if (typeof opts.by === 'function') {\n    arr.sort((a, b) => {\n      // Exit early if we already know we want to revert\n      if (revert) {\n        return 0;\n      }\n\n      const valA = opts.by(a[opts.key]);\n      const valB = opts.by(b[opts.key]);\n\n      // If both values are undefined, use the DOM order\n      if (valA === undefined && valB === undefined) {\n        revert = true;\n        return 0;\n      }\n\n      if (valA < valB || valA === 'sortFirst' || valB === 'sortLast') {\n        return -1;\n      }\n\n      if (valA > valB || valA === 'sortLast' || valB === 'sortFirst') {\n        return 1;\n      }\n\n      return 0;\n    });\n  } else if (typeof opts.compare === 'function') {\n    arr.sort(opts.compare);\n  }\n\n  // Revert to the original array if necessary\n  if (revert) {\n    return original;\n  }\n\n  if (opts.reverse) {\n    arr.reverse();\n  }\n\n  return arr;\n}\n","const transitions = {};\nconst eventName = 'transitionend';\nlet count = 0;\n\nfunction uniqueId() {\n  count += 1;\n  return eventName + count;\n}\n\nexport function cancelTransitionEnd(id) {\n  if (transitions[id]) {\n    transitions[id].element.removeEventListener(eventName, transitions[id].listener);\n    transitions[id] = null;\n    return true;\n  }\n\n  return false;\n}\n\nexport function onTransitionEnd(element, callback) {\n  const id = uniqueId();\n  const listener = (evt) => {\n    if (evt.currentTarget === evt.target) {\n      cancelTransitionEnd(id);\n      callback(evt);\n    }\n  };\n\n  element.addEventListener(eventName, listener);\n\n  transitions[id] = { element, listener };\n\n  return id;\n}\n","export default function arrayMax(array) {\n  return Math.max.apply(Math, array); // eslint-disable-line prefer-spread\n}\n","export default function arrayMin(array) {\n  return Math.min.apply(Math, array); // eslint-disable-line prefer-spread\n}\n","import Point from './point';\nimport Rect from './rect';\nimport arrayMax from './array-max';\nimport arrayMin from './array-min';\n\n/**\n * Determine the number of columns an items spans.\n * @param {number} itemWidth Width of the item.\n * @param {number} columnWidth Width of the column (includes gutter).\n * @param {number} columns Total number of columns\n * @param {number} threshold A buffer value for the size of the column to fit.\n * @return {number}\n */\nexport function getColumnSpan(itemWidth, columnWidth, columns, threshold) {\n  let columnSpan = itemWidth / columnWidth;\n\n  // If the difference between the rounded column span number and the\n  // calculated column span number is really small, round the number to\n  // make it fit.\n  if (Math.abs(Math.round(columnSpan) - columnSpan) < threshold) {\n    // e.g. columnSpan = 4.0089945390298745\n    columnSpan = Math.round(columnSpan);\n  }\n\n  // Ensure the column span is not more than the amount of columns in the whole layout.\n  return Math.min(Math.ceil(columnSpan), columns);\n}\n\n/**\n * Retrieves the column set to use for placement.\n * @param {number} columnSpan The number of columns this current item spans.\n * @param {number} columns The total columns in the grid.\n * @return {Array.<number>} An array of numbers represeting the column set.\n */\nexport function getAvailablePositions(positions, columnSpan, columns) {\n  // The item spans only one column.\n  if (columnSpan === 1) {\n    return positions;\n  }\n\n  // The item spans more than one column, figure out how many different\n  // places it could fit horizontally.\n  // The group count is the number of places within the positions this block\n  // could fit, ignoring the current positions of items.\n  // Imagine a 2 column brick as the second item in a 4 column grid with\n  // 10px height each. Find the places it would fit:\n  // [20, 10, 10, 0]\n  //  |   |   |\n  //  *   *   *\n  //\n  // Then take the places which fit and get the bigger of the two:\n  // max([20, 10]), max([10, 10]), max([10, 0]) = [20, 10, 10]\n  //\n  // Next, find the first smallest number (the short column).\n  // [20, 10, 10]\n  //      |\n  //      *\n  //\n  // And that's where it should be placed!\n  //\n  // Another example where the second column's item extends past the first:\n  // [10, 20, 10, 0] => [20, 20, 10] => 10\n  const available = [];\n\n  // For how many possible positions for this item there are.\n  for (let i = 0; i <= columns - columnSpan; i++) {\n    // Find the bigger value for each place it could fit.\n    available.push(arrayMax(positions.slice(i, i + columnSpan)));\n  }\n\n  return available;\n}\n\n/**\n * Find index of short column, the first from the left where this item will go.\n *\n * @param {Array.<number>} positions The array to search for the smallest number.\n * @param {number} buffer Optional buffer which is very useful when the height\n *     is a percentage of the width.\n * @return {number} Index of the short column.\n */\nexport function getShortColumn(positions, buffer) {\n  const minPosition = arrayMin(positions);\n  for (let i = 0, len = positions.length; i < len; i++) {\n    if (positions[i] >= minPosition - buffer && positions[i] <= minPosition + buffer) {\n      return i;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Determine the location of the next item, based on its size.\n * @param {Object} itemSize Object with width and height.\n * @param {Array.<number>} positions Positions of the other current items.\n * @param {number} gridSize The column width or row height.\n * @param {number} total The total number of columns or rows.\n * @param {number} threshold Buffer value for the column to fit.\n * @param {number} buffer Vertical buffer for the height of items.\n * @return {Point}\n */\nexport function getItemPosition({\n  itemSize, positions, gridSize, total, threshold, buffer,\n}) {\n  const span = getColumnSpan(itemSize.width, gridSize, total, threshold);\n  const setY = getAvailablePositions(positions, span, total);\n  const shortColumnIndex = getShortColumn(setY, buffer);\n\n  // Position the item\n  const point = new Point(gridSize * shortColumnIndex, setY[shortColumnIndex]);\n\n  // Update the columns array with the new values for each column.\n  // e.g. before the update the columns could be [250, 0, 0, 0] for an item\n  // which spans 2 columns. After it would be [250, itemHeight, itemHeight, 0].\n  const setHeight = setY[shortColumnIndex] + itemSize.height;\n  for (let i = 0; i < span; i++) {\n    positions[shortColumnIndex + i] = setHeight;\n  }\n\n  return point;\n}\n\n/**\n * This method attempts to center items. This method could potentially be slow\n * with a large number of items because it must place items, then check every\n * previous item to ensure there is no overlap.\n * @param {Array.<Rect>} itemRects Item data objects.\n * @param {number} containerWidth Width of the containing element.\n * @return {Array.<Point>}\n */\nexport function getCenteredPositions(itemRects, containerWidth) {\n  const rowMap = {};\n\n  // Populate rows by their offset because items could jump between rows like:\n  // a   c\n  //  bbb\n  itemRects.forEach((itemRect) => {\n    if (rowMap[itemRect.top]) {\n      // Push the point to the last row array.\n      rowMap[itemRect.top].push(itemRect);\n    } else {\n      // Start of a new row.\n      rowMap[itemRect.top] = [itemRect];\n    }\n  });\n\n  // For each row, find the end of the last item, then calculate\n  // the remaining space by dividing it by 2. Then add that\n  // offset to the x position of each point.\n  let rects = [];\n  const rows = [];\n  const centeredRows = [];\n  Object.keys(rowMap).forEach((key) => {\n    const itemRects = rowMap[key];\n    rows.push(itemRects);\n    const lastItem = itemRects[itemRects.length - 1];\n    const end = lastItem.left + lastItem.width;\n    const offset = Math.round((containerWidth - end) / 2);\n\n    let finalRects = itemRects;\n    let canMove = false;\n    if (offset > 0) {\n      const newRects = [];\n      canMove = itemRects.every((r) => {\n        const newRect = new Rect(r.left + offset, r.top, r.width, r.height, r.id);\n\n        // Check all current rects to make sure none overlap.\n        const noOverlap = !rects.some((r) => Rect.intersects(newRect, r));\n\n        newRects.push(newRect);\n        return noOverlap;\n      });\n\n      // If none of the rectangles overlapped, the whole group can be centered.\n      if (canMove) {\n        finalRects = newRects;\n      }\n    }\n\n    // If the items are not going to be offset, ensure that the original\n    // placement for this row will not overlap previous rows (row-spanning\n    // elements could be in the way).\n    if (!canMove) {\n      let intersectingRect;\n      const hasOverlap = itemRects.some((itemRect) => rects.some((r) => {\n        const intersects = Rect.intersects(itemRect, r);\n        if (intersects) {\n          intersectingRect = r;\n        }\n        return intersects;\n      }));\n\n      // If there is any overlap, replace the overlapping row with the original.\n      if (hasOverlap) {\n        const rowIndex = centeredRows.findIndex((items) => items.includes(intersectingRect));\n        centeredRows.splice(rowIndex, 1, rows[rowIndex]);\n      }\n    }\n\n    rects = rects.concat(finalRects);\n    centeredRows.push(finalRects);\n  });\n\n  // Reduce array of arrays to a single array of points.\n  // https://stackoverflow.com/a/10865042/373422\n  // Then reset sort back to how the items were passed to this method.\n  // Remove the wrapper object with index, map to a Point.\n  return [].concat.apply([], centeredRows) // eslint-disable-line prefer-spread\n    .sort((a, b) => (a.id - b.id))\n    .map((itemRect) => new Point(itemRect.left, itemRect.top));\n}\n","/**\n * Hyphenates a javascript style string to a css one. For example:\n * MozBoxSizing -> -moz-box-sizing.\n * @param {string} str The string to hyphenate.\n * @return {string} The hyphenated string.\n */\nexport default function hyphenate(str) {\n  return str.replace(/([A-Z])/g, (str, m1) => `-${m1.toLowerCase()}`);\n}\n","import TinyEmitter from 'tiny-emitter';\nimport matches from 'matches-selector';\nimport throttle from 'throttleit';\nimport parallel from 'array-parallel';\n\nimport Point from './point';\nimport Rect from './rect';\nimport ShuffleItem from './shuffle-item';\nimport Classes from './classes';\nimport getNumberStyle from './get-number-style';\nimport sorter from './sorter';\nimport { onTransitionEnd, cancelTransitionEnd } from './on-transition-end';\nimport {\n  getItemPosition,\n  getColumnSpan,\n  getAvailablePositions,\n  getShortColumn,\n  getCenteredPositions,\n} from './layout';\nimport arrayMax from './array-max';\nimport hyphenate from './hyphenate';\n\nfunction arrayUnique(x) {\n  return Array.from(new Set(x));\n}\n\n// Used for unique instance variables\nlet id = 0;\n\nclass Shuffle extends TinyEmitter {\n  /**\n   * Categorize, sort, and filter a responsive grid of items.\n   *\n   * @param {Element} element An element which is the parent container for the grid items.\n   * @param {Object} [options=Shuffle.options] Options object.\n   * @constructor\n   */\n  constructor(element, options = {}) {\n    super();\n    // eslint-disable-next-line prefer-object-spread\n    this.options = Object.assign({}, Shuffle.options, options);\n\n    // Allow misspelling of delimiter since that's how it used to be.\n    // Remove in v6.\n    if (this.options.delimeter) {\n      this.options.delimiter = this.options.delimeter;\n    }\n\n    this.lastSort = {};\n    this.group = Shuffle.ALL_ITEMS;\n    this.lastFilter = Shuffle.ALL_ITEMS;\n    this.isEnabled = true;\n    this.isDestroyed = false;\n    this.isInitialized = false;\n    this._transitions = [];\n    this.isTransitioning = false;\n    this._queue = [];\n\n    const el = this._getElementOption(element);\n\n    if (!el) {\n      throw new TypeError('Shuffle needs to be initialized with an element.');\n    }\n\n    this.element = el;\n    this.id = 'shuffle_' + id;\n    id += 1;\n\n    this._init();\n    this.isInitialized = true;\n  }\n\n  _init() {\n    this.items = this._getItems();\n    this.sortedItems = this.items;\n\n    this.options.sizer = this._getElementOption(this.options.sizer);\n\n    // Add class and invalidate styles\n    this.element.classList.add(Shuffle.Classes.BASE);\n\n    // Set initial css for each item\n    this._initItems(this.items);\n\n    // Bind resize events\n    this._onResize = this._getResizeFunction();\n    window.addEventListener('resize', this._onResize);\n\n    // If the page has not already emitted the `load` event, call layout on load.\n    // This avoids layout issues caused by images and fonts loading after the\n    // instance has been initialized.\n    if (document.readyState !== 'complete') {\n      const layout = this.layout.bind(this);\n      window.addEventListener('load', function onLoad() {\n        window.removeEventListener('load', onLoad);\n        layout();\n      });\n    }\n\n    // Get container css all in one request. Causes reflow\n    const containerCss = window.getComputedStyle(this.element, null);\n    const containerWidth = Shuffle.getSize(this.element).width;\n\n    // Add styles to the container if it doesn't have them.\n    this._validateStyles(containerCss);\n\n    // We already got the container's width above, no need to cause another\n    // reflow getting it again... Calculate the number of columns there will be\n    this._setColumns(containerWidth);\n\n    // Kick off!\n    this.filter(this.options.group, this.options.initialSort);\n\n    // The shuffle items haven't had transitions set on them yet so the user\n    // doesn't see the first layout. Set them now that the first layout is done.\n    // First, however, a synchronous layout must be caused for the previous\n    // styles to be applied without transitions.\n    this.element.offsetWidth; // eslint-disable-line no-unused-expressions\n    this.setItemTransitions(this.items);\n    this.element.style.transition = `height ${this.options.speed}ms ${this.options.easing}`;\n  }\n\n  /**\n   * Returns a throttled and proxied function for the resize handler.\n   * @return {function}\n   * @private\n   */\n  _getResizeFunction() {\n    const resizeFunction = this._handleResize.bind(this);\n    return this.options.throttle\n      ? this.options.throttle(resizeFunction, this.options.throttleTime)\n      : resizeFunction;\n  }\n\n  /**\n   * Retrieve an element from an option.\n   * @param {string|jQuery|Element} option The option to check.\n   * @return {?Element} The plain element or null.\n   * @private\n   */\n  _getElementOption(option) {\n    // If column width is a string, treat is as a selector and search for the\n    // sizer element within the outermost container\n    if (typeof option === 'string') {\n      return this.element.querySelector(option);\n    }\n\n    // Check for an element\n    if (option && option.nodeType && option.nodeType === 1) {\n      return option;\n    }\n\n    // Check for jQuery object\n    if (option && option.jquery) {\n      return option[0];\n    }\n\n    return null;\n  }\n\n  /**\n   * Ensures the shuffle container has the css styles it needs applied to it.\n   * @param {Object} styles Key value pairs for position and overflow.\n   * @private\n   */\n  _validateStyles(styles) {\n    // Position cannot be static.\n    if (styles.position === 'static') {\n      this.element.style.position = 'relative';\n    }\n\n    // Overflow has to be hidden.\n    if (styles.overflow !== 'hidden') {\n      this.element.style.overflow = 'hidden';\n    }\n  }\n\n  /**\n   * Filter the elements by a category.\n   * @param {string|string[]|function(Element):boolean} [category] Category to\n   *     filter by. If it's given, the last category will be used to filter the items.\n   * @param {Array} [collection] Optionally filter a collection. Defaults to\n   *     all the items.\n   * @return {{visible: ShuffleItem[], hidden: ShuffleItem[]}}\n   * @private\n   */\n  _filter(category = this.lastFilter, collection = this.items) {\n    const set = this._getFilteredSets(category, collection);\n\n    // Individually add/remove hidden/visible classes\n    this._toggleFilterClasses(set);\n\n    // Save the last filter in case elements are appended.\n    this.lastFilter = category;\n\n    // This is saved mainly because providing a filter function (like searching)\n    // will overwrite the `lastFilter` property every time its called.\n    if (typeof category === 'string') {\n      this.group = category;\n    }\n\n    return set;\n  }\n\n  /**\n   * Returns an object containing the visible and hidden elements.\n   * @param {string|string[]|function(Element):boolean} category Category or function to filter by.\n   * @param {ShuffleItem[]} items A collection of items to filter.\n   * @return {{visible: ShuffleItem[], hidden: ShuffleItem[]}}\n   * @private\n   */\n  _getFilteredSets(category, items) {\n    let visible = [];\n    const hidden = [];\n\n    // category === 'all', add visible class to everything\n    if (category === Shuffle.ALL_ITEMS) {\n      visible = items;\n\n      // Loop through each item and use provided function to determine\n      // whether to hide it or not.\n    } else {\n      items.forEach((item) => {\n        if (this._doesPassFilter(category, item.element)) {\n          visible.push(item);\n        } else {\n          hidden.push(item);\n        }\n      });\n    }\n\n    return {\n      visible,\n      hidden,\n    };\n  }\n\n  /**\n   * Test an item to see if it passes a category.\n   * @param {string|string[]|function():boolean} category Category or function to filter by.\n   * @param {Element} element An element to test.\n   * @return {boolean} Whether it passes the category/filter.\n   * @private\n   */\n  _doesPassFilter(category, element) {\n    if (typeof category === 'function') {\n      return category.call(element, element, this);\n    }\n\n    // Check each element's data-groups attribute against the given category.\n    const attr = element.getAttribute('data-' + Shuffle.FILTER_ATTRIBUTE_KEY);\n    const keys = this.options.delimiter\n      ? attr.split(this.options.delimiter)\n      : JSON.parse(attr);\n\n    function testCategory(category) {\n      return keys.includes(category);\n    }\n\n    if (Array.isArray(category)) {\n      if (this.options.filterMode === Shuffle.FilterMode.ANY) {\n        return category.some(testCategory);\n      }\n      return category.every(testCategory);\n    }\n\n    return keys.includes(category);\n  }\n\n  /**\n   * Toggles the visible and hidden class names.\n   * @param {{visible, hidden}} Object with visible and hidden arrays.\n   * @private\n   */\n  _toggleFilterClasses({ visible, hidden }) {\n    visible.forEach((item) => {\n      item.show();\n    });\n\n    hidden.forEach((item) => {\n      item.hide();\n    });\n  }\n\n  /**\n   * Set the initial css for each item\n   * @param {ShuffleItem[]} items Set to initialize.\n   * @private\n   */\n  _initItems(items) {\n    items.forEach((item) => {\n      item.init();\n    });\n  }\n\n  /**\n   * Remove element reference and styles.\n   * @param {ShuffleItem[]} items Set to dispose.\n   * @private\n   */\n  _disposeItems(items) {\n    items.forEach((item) => {\n      item.dispose();\n    });\n  }\n\n  /**\n   * Updates the visible item count.\n   * @private\n   */\n  _updateItemCount() {\n    this.visibleItems = this._getFilteredItems().length;\n  }\n\n  /**\n   * Sets css transform transition on a group of elements. This is not executed\n   * at the same time as `item.init` so that transitions don't occur upon\n   * initialization of a new Shuffle instance.\n   * @param {ShuffleItem[]} items Shuffle items to set transitions on.\n   * @protected\n   */\n  setItemTransitions(items) {\n    const { speed, easing } = this.options;\n    const positionProps = this.options.useTransforms ? ['transform'] : ['top', 'left'];\n\n    // Allow users to transtion other properties if they exist in the `before`\n    // css mapping of the shuffle item.\n    const cssProps = Object.keys(ShuffleItem.Css.HIDDEN.before).map((k) => hyphenate(k));\n    const properties = positionProps.concat(cssProps).join();\n\n    items.forEach((item) => {\n      item.element.style.transitionDuration = speed + 'ms';\n      item.element.style.transitionTimingFunction = easing;\n      item.element.style.transitionProperty = properties;\n    });\n  }\n\n  _getItems() {\n    return Array.from(this.element.children)\n      .filter((el) => matches(el, this.options.itemSelector))\n      .map((el) => new ShuffleItem(el, this.options.isRTL));\n  }\n\n  /**\n   * Combine the current items array with a new one and sort it by DOM order.\n   * @param {ShuffleItem[]} items Items to track.\n   * @return {ShuffleItem[]}\n   */\n  _mergeNewItems(items) {\n    const children = Array.from(this.element.children);\n    return sorter(this.items.concat(items), {\n      by(element) {\n        return children.indexOf(element);\n      },\n    });\n  }\n\n  _getFilteredItems() {\n    return this.items.filter((item) => item.isVisible);\n  }\n\n  _getConcealedItems() {\n    return this.items.filter((item) => !item.isVisible);\n  }\n\n  /**\n   * Returns the column size, based on column width and sizer options.\n   * @param {number} containerWidth Size of the parent container.\n   * @param {number} gutterSize Size of the gutters.\n   * @return {number}\n   * @private\n   */\n  _getColumnSize(containerWidth, gutterSize) {\n    let size;\n\n    // If the columnWidth property is a function, then the grid is fluid\n    if (typeof this.options.columnWidth === 'function') {\n      size = this.options.columnWidth(containerWidth);\n\n      // columnWidth option isn't a function, are they using a sizing element?\n    } else if (this.options.sizer) {\n      size = Shuffle.getSize(this.options.sizer).width;\n\n      // if not, how about the explicitly set option?\n    } else if (this.options.columnWidth) {\n      size = this.options.columnWidth;\n\n      // or use the size of the first item\n    } else if (this.items.length > 0) {\n      size = Shuffle.getSize(this.items[0].element, true).width;\n\n      // if there's no items, use size of container\n    } else {\n      size = containerWidth;\n    }\n\n    // Don't let them set a column width of zero.\n    if (size === 0) {\n      size = containerWidth;\n    }\n\n    return size + gutterSize;\n  }\n\n  /**\n   * Returns the gutter size, based on gutter width and sizer options.\n   * @param {number} containerWidth Size of the parent container.\n   * @return {number}\n   * @private\n   */\n  _getGutterSize(containerWidth) {\n    let size;\n    if (typeof this.options.gutterWidth === 'function') {\n      size = this.options.gutterWidth(containerWidth);\n    } else if (this.options.sizer) {\n      size = getNumberStyle(this.options.sizer, 'marginLeft');\n    } else {\n      size = this.options.gutterWidth;\n    }\n\n    return size;\n  }\n\n  /**\n   * Calculate the number of columns to be used. Gets css if using sizer element.\n   * @param {number} [containerWidth] Optionally specify a container width if\n   *    it's already available.\n   */\n  _setColumns(containerWidth = Shuffle.getSize(this.element).width) {\n    const gutter = this._getGutterSize(containerWidth);\n    const columnWidth = this._getColumnSize(containerWidth, gutter);\n    let calculatedColumns = (containerWidth + gutter) / columnWidth;\n\n    // Widths given from getStyles are not precise enough...\n    if (Math.abs(Math.round(calculatedColumns) - calculatedColumns) < this.options.columnThreshold) {\n      // e.g. calculatedColumns = 11.998876\n      calculatedColumns = Math.round(calculatedColumns);\n    }\n\n    this.cols = Math.max(Math.floor(calculatedColumns || 0), 1);\n    this.containerWidth = containerWidth;\n    this.colWidth = columnWidth;\n  }\n\n  /**\n   * Adjust the height of the grid\n   */\n  _setContainerSize() {\n    this.element.style.height = this._getContainerSize() + 'px';\n  }\n\n  /**\n   * Based on the column heights, it returns the biggest one.\n   * @return {number}\n   * @private\n   */\n  _getContainerSize() {\n    return arrayMax(this.positions);\n  }\n\n  /**\n   * Get the clamped stagger amount.\n   * @param {number} index Index of the item to be staggered.\n   * @return {number}\n   */\n  _getStaggerAmount(index) {\n    return Math.min(index * this.options.staggerAmount, this.options.staggerAmountMax);\n  }\n\n  /**\n   * Emit an event from this instance.\n   * @param {string} name Event name.\n   * @param {Object} [data={}] Optional object data.\n   */\n  _dispatch(name, data = {}) {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    data.shuffle = this;\n    this.emit(name, data);\n  }\n\n  /**\n   * Zeros out the y columns array, which is used to determine item placement.\n   * @private\n   */\n  _resetCols() {\n    let i = this.cols;\n    this.positions = [];\n    while (i) {\n      i -= 1;\n      this.positions.push(0);\n    }\n  }\n\n  /**\n   * Loops through each item that should be shown and calculates the x, y position.\n   * @param {ShuffleItem[]} items Array of items that will be shown/layed\n   *     out in order in their array.\n   */\n  _layout(items) {\n    const itemPositions = this._getNextPositions(items);\n\n    let count = 0;\n    items.forEach((item, i) => {\n      function callback() {\n        item.applyCss(ShuffleItem.Css.VISIBLE.after);\n      }\n\n      // If the item will not change its position, do not add it to the render\n      // queue. Transitions don't fire when setting a property to the same value.\n      if (Point.equals(item.point, itemPositions[i]) && !item.isHidden) {\n        item.applyCss(ShuffleItem.Css.VISIBLE.before);\n        callback();\n        return;\n      }\n\n      item.point = itemPositions[i];\n      item.scale = ShuffleItem.Scale.VISIBLE;\n      item.isHidden = false;\n\n      // Clone the object so that the `before` object isn't modified when the\n      // transition delay is added.\n      const styles = this.getStylesForTransition(item, ShuffleItem.Css.VISIBLE.before);\n      styles.transitionDelay = this._getStaggerAmount(count) + 'ms';\n\n      this._queue.push({\n        item,\n        styles,\n        callback,\n      });\n\n      count += 1;\n    });\n  }\n\n  /**\n   * Return an array of Point instances representing the future positions of\n   * each item.\n   * @param {ShuffleItem[]} items Array of sorted shuffle items.\n   * @return {Point[]}\n   * @private\n   */\n  _getNextPositions(items) {\n    // If position data is going to be changed, add the item's size to the\n    // transformer to allow for calculations.\n    if (this.options.isCentered) {\n      const itemsData = items.map((item, i) => {\n        const itemSize = Shuffle.getSize(item.element, true);\n        const point = this._getItemPosition(itemSize);\n        return new Rect(point.x, point.y, itemSize.width, itemSize.height, i);\n      });\n\n      return this.getTransformedPositions(itemsData, this.containerWidth);\n    }\n\n    // If no transforms are going to happen, simply return an array of the\n    // future points of each item.\n    return items.map((item) => this._getItemPosition(Shuffle.getSize(item.element, true)));\n  }\n\n  /**\n   * Determine the location of the next item, based on its size.\n   * @param {{width: number, height: number}} itemSize Object with width and height.\n   * @return {Point}\n   * @private\n   */\n  _getItemPosition(itemSize) {\n    return getItemPosition({\n      itemSize,\n      positions: this.positions,\n      gridSize: this.colWidth,\n      total: this.cols,\n      threshold: this.options.columnThreshold,\n      buffer: this.options.buffer,\n    });\n  }\n\n  /**\n   * Mutate positions before they're applied.\n   * @param {Rect[]} itemRects Item data objects.\n   * @param {number} containerWidth Width of the containing element.\n   * @return {Point[]}\n   * @protected\n   */\n  getTransformedPositions(itemRects, containerWidth) {\n    return getCenteredPositions(itemRects, containerWidth);\n  }\n\n  /**\n   * Hides the elements that don't match our filter.\n   * @param {ShuffleItem[]} collection Collection to shrink.\n   * @private\n   */\n  _shrink(collection = this._getConcealedItems()) {\n    let count = 0;\n    collection.forEach((item) => {\n      function callback() {\n        item.applyCss(ShuffleItem.Css.HIDDEN.after);\n      }\n\n      // Continuing would add a transitionend event listener to the element, but\n      // that listener would not execute because the transform and opacity would\n      // stay the same.\n      // The callback is executed here because it is not guaranteed to be called\n      // after the transitionend event because the transitionend could be\n      // canceled if another animation starts.\n      if (item.isHidden) {\n        item.applyCss(ShuffleItem.Css.HIDDEN.before);\n        callback();\n        return;\n      }\n\n      item.scale = ShuffleItem.Scale.HIDDEN;\n      item.isHidden = true;\n\n      const styles = this.getStylesForTransition(item, ShuffleItem.Css.HIDDEN.before);\n      styles.transitionDelay = this._getStaggerAmount(count) + 'ms';\n\n      this._queue.push({\n        item,\n        styles,\n        callback,\n      });\n\n      count += 1;\n    });\n  }\n\n  /**\n   * Resize handler.\n   * @private\n   */\n  _handleResize() {\n    // If shuffle is disabled, destroyed, don't do anything\n    if (!this.isEnabled || this.isDestroyed) {\n      return;\n    }\n\n    this.update();\n  }\n\n  /**\n   * Returns styles which will be applied to the an item for a transition.\n   * @param {ShuffleItem} item Item to get styles for. Should have updated\n   *   scale and point properties.\n   * @param {Object} styleObject Extra styles that will be used in the transition.\n   * @return {!Object} Transforms for transitions, left/top for animate.\n   * @protected\n   */\n  getStylesForTransition(item, styleObject) {\n    // Clone the object to avoid mutating the original.\n    // eslint-disable-next-line prefer-object-spread\n    const styles = Object.assign({}, styleObject);\n\n    if (this.options.useTransforms) {\n      const sign = this.options.isRTL ? '-' : '';\n      const x = this.options.roundTransforms ? Math.round(item.point.x) : item.point.x;\n      const y = this.options.roundTransforms ? Math.round(item.point.y) : item.point.y;\n      styles.transform = `translate(${sign}${x}px, ${y}px) scale(${item.scale})`;\n    } else {\n      if (this.options.isRTL) {\n        styles.right = item.point.x + 'px';\n      } else {\n        styles.left = item.point.x + 'px';\n      }\n      styles.top = item.point.y + 'px';\n    }\n\n    return styles;\n  }\n\n  /**\n   * Listen for the transition end on an element and execute the itemCallback\n   * when it finishes.\n   * @param {Element} element Element to listen on.\n   * @param {function} itemCallback Callback for the item.\n   * @param {function} done Callback to notify `parallel` that this one is done.\n   */\n  _whenTransitionDone(element, itemCallback, done) {\n    const id = onTransitionEnd(element, (evt) => {\n      itemCallback();\n      done(null, evt);\n    });\n\n    this._transitions.push(id);\n  }\n\n  /**\n   * Return a function which will set CSS styles and call the `done` function\n   * when (if) the transition finishes.\n   * @param {Object} opts Transition object.\n   * @return {function} A function to be called with a `done` function.\n   */\n  _getTransitionFunction(opts) {\n    return (done) => {\n      opts.item.applyCss(opts.styles);\n      this._whenTransitionDone(opts.item.element, opts.callback, done);\n    };\n  }\n\n  /**\n   * Execute the styles gathered in the style queue. This applies styles to elements,\n   * triggering transitions.\n   * @private\n   */\n  _processQueue() {\n    if (this.isTransitioning) {\n      this._cancelMovement();\n    }\n\n    const hasSpeed = this.options.speed > 0;\n    const hasQueue = this._queue.length > 0;\n\n    if (hasQueue && hasSpeed && this.isInitialized) {\n      this._startTransitions(this._queue);\n    } else if (hasQueue) {\n      this._styleImmediately(this._queue);\n      this._dispatch(Shuffle.EventType.LAYOUT);\n\n      // A call to layout happened, but none of the newly visible items will\n      // change position or the transition duration is zero, which will not trigger\n      // the transitionend event.\n    } else {\n      this._dispatch(Shuffle.EventType.LAYOUT);\n    }\n\n    // Remove everything in the style queue\n    this._queue.length = 0;\n  }\n\n  /**\n   * Wait for each transition to finish, the emit the layout event.\n   * @param {Object[]} transitions Array of transition objects.\n   */\n  _startTransitions(transitions) {\n    // Set flag that shuffle is currently in motion.\n    this.isTransitioning = true;\n\n    // Create an array of functions to be called.\n    const callbacks = transitions.map((obj) => this._getTransitionFunction(obj));\n\n    parallel(callbacks, this._movementFinished.bind(this));\n  }\n\n  _cancelMovement() {\n    // Remove the transition end event for each listener.\n    this._transitions.forEach(cancelTransitionEnd);\n\n    // Reset the array.\n    this._transitions.length = 0;\n\n    // Show it's no longer active.\n    this.isTransitioning = false;\n  }\n\n  /**\n   * Apply styles without a transition.\n   * @param {Object[]} objects Array of transition objects.\n   * @private\n   */\n  _styleImmediately(objects) {\n    if (objects.length) {\n      const elements = objects.map((obj) => obj.item.element);\n\n      Shuffle._skipTransitions(elements, () => {\n        objects.forEach((obj) => {\n          obj.item.applyCss(obj.styles);\n          obj.callback();\n        });\n      });\n    }\n  }\n\n  _movementFinished() {\n    this._transitions.length = 0;\n    this.isTransitioning = false;\n    this._dispatch(Shuffle.EventType.LAYOUT);\n  }\n\n  /**\n   * The magic. This is what makes the plugin 'shuffle'\n   * @param {string|string[]|function(Element):boolean} [category] Category to filter by.\n   *     Can be a function, string, or array of strings.\n   * @param {SortOptions} [sortOptions] A sort object which can sort the visible set\n   */\n  filter(category, sortOptions) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    if (!category || (category && category.length === 0)) {\n      category = Shuffle.ALL_ITEMS; // eslint-disable-line no-param-reassign\n    }\n\n    this._filter(category);\n\n    // Shrink each hidden item\n    this._shrink();\n\n    // How many visible elements?\n    this._updateItemCount();\n\n    // Update transforms on visible elements so they will animate to their new positions.\n    this.sort(sortOptions);\n  }\n\n  /**\n   * Gets the visible elements, sorts them, and passes them to layout.\n   * @param {SortOptions} [sortOptions] The options object to pass to `sorter`.\n   */\n  sort(sortOptions = this.lastSort) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    this._resetCols();\n\n    const items = sorter(this._getFilteredItems(), sortOptions);\n    this.sortedItems = items;\n\n    this._layout(items);\n\n    // `_layout` always happens after `_shrink`, so it's safe to process the style\n    // queue here with styles from the shrink method.\n    this._processQueue();\n\n    // Adjust the height of the container.\n    this._setContainerSize();\n\n    this.lastSort = sortOptions;\n  }\n\n  /**\n   * Reposition everything.\n   * @param {boolean} [isOnlyLayout=false] If true, column and gutter widths won't be recalculated.\n   */\n  update(isOnlyLayout = false) {\n    if (this.isEnabled) {\n      if (!isOnlyLayout) {\n        // Get updated colCount\n        this._setColumns();\n      }\n\n      // Layout items\n      this.sort();\n    }\n  }\n\n  /**\n   * Use this instead of `update()` if you don't need the columns and gutters updated\n   * Maybe an image inside `shuffle` loaded (and now has a height), which means calculations\n   * could be off.\n   */\n  layout() {\n    this.update(true);\n  }\n\n  /**\n   * New items have been appended to shuffle. Mix them in with the current\n   * filter or sort status.\n   * @param {Element[]} newItems Collection of new items.\n   */\n  add(newItems) {\n    const items = arrayUnique(newItems).map((el) => new ShuffleItem(el, this.options.isRTL));\n\n    // Add classes and set initial positions.\n    this._initItems(items);\n\n    // Determine which items will go with the current filter.\n    this._resetCols();\n\n    const allItems = this._mergeNewItems(items);\n    const sortedItems = sorter(allItems, this.lastSort);\n    const allSortedItemsSet = this._filter(this.lastFilter, sortedItems);\n\n    const isNewItem = (item) => items.includes(item);\n    const applyHiddenState = (item) => {\n      item.scale = ShuffleItem.Scale.HIDDEN;\n      item.isHidden = true;\n      item.applyCss(ShuffleItem.Css.HIDDEN.before);\n      item.applyCss(ShuffleItem.Css.HIDDEN.after);\n    };\n\n    // Layout all items again so that new items get positions.\n    // Synchonously apply positions.\n    const itemPositions = this._getNextPositions(allSortedItemsSet.visible);\n    allSortedItemsSet.visible.forEach((item, i) => {\n      if (isNewItem(item)) {\n        item.point = itemPositions[i];\n        applyHiddenState(item);\n        item.applyCss(this.getStylesForTransition(item, {}));\n      }\n    });\n\n    allSortedItemsSet.hidden.forEach((item) => {\n      if (isNewItem(item)) {\n        applyHiddenState(item);\n      }\n    });\n\n    // Cause layout so that the styles above are applied.\n    this.element.offsetWidth; // eslint-disable-line no-unused-expressions\n\n    // Add transition to each item.\n    this.setItemTransitions(items);\n\n    // Update the list of items.\n    this.items = this._mergeNewItems(items);\n\n    // Update layout/visibility of new and old items.\n    this.filter(this.lastFilter);\n  }\n\n  /**\n   * Disables shuffle from updating dimensions and layout on resize\n   */\n  disable() {\n    this.isEnabled = false;\n  }\n\n  /**\n   * Enables shuffle again\n   * @param {boolean} [isUpdateLayout=true] if undefined, shuffle will update columns and gutters\n   */\n  enable(isUpdateLayout = true) {\n    this.isEnabled = true;\n    if (isUpdateLayout) {\n      this.update();\n    }\n  }\n\n  /**\n   * Remove 1 or more shuffle items.\n   * @param {Element[]} elements An array containing one or more\n   *     elements in shuffle\n   * @return {Shuffle} The shuffle instance.\n   */\n  remove(elements) {\n    if (!elements.length) {\n      return;\n    }\n\n    const collection = arrayUnique(elements);\n\n    const oldItems = collection\n      .map((element) => this.getItemByElement(element))\n      .filter((item) => !!item);\n\n    const handleLayout = () => {\n      this._disposeItems(oldItems);\n\n      // Remove the collection in the callback\n      collection.forEach((element) => {\n        element.parentNode.removeChild(element);\n      });\n\n      this._dispatch(Shuffle.EventType.REMOVED, { collection });\n    };\n\n    // Hide collection first.\n    this._toggleFilterClasses({\n      visible: [],\n      hidden: oldItems,\n    });\n\n    this._shrink(oldItems);\n\n    this.sort();\n\n    // Update the list of items here because `remove` could be called again\n    // with an item that is in the process of being removed.\n    this.items = this.items.filter((item) => !oldItems.includes(item));\n    this._updateItemCount();\n\n    this.once(Shuffle.EventType.LAYOUT, handleLayout);\n  }\n\n  /**\n   * Retrieve a shuffle item by its element.\n   * @param {Element} element Element to look for.\n   * @return {?ShuffleItem} A shuffle item or undefined if it's not found.\n   */\n  getItemByElement(element) {\n    return this.items.find((item) => item.element === element);\n  }\n\n  /**\n   * Dump the elements currently stored and reinitialize all child elements which\n   * match the `itemSelector`.\n   */\n  resetItems() {\n    // Remove refs to current items.\n    this._disposeItems(this.items);\n    this.isInitialized = false;\n\n    // Find new items in the DOM.\n    this.items = this._getItems();\n\n    // Set initial styles on the new items.\n    this._initItems(this.items);\n\n    this.once(Shuffle.EventType.LAYOUT, () => {\n      // Add transition to each item.\n      this.setItemTransitions(this.items);\n      this.isInitialized = true;\n    });\n\n    // Lay out all items.\n    this.filter(this.lastFilter);\n  }\n\n  /**\n   * Destroys shuffle, removes events, styles, and classes\n   */\n  destroy() {\n    this._cancelMovement();\n    window.removeEventListener('resize', this._onResize);\n\n    // Reset container styles\n    this.element.classList.remove('shuffle');\n    this.element.removeAttribute('style');\n\n    // Reset individual item styles\n    this._disposeItems(this.items);\n\n    this.items.length = 0;\n    this._transitions.length = 0;\n\n    // Null DOM references\n    this.options.sizer = null;\n    this.element = null;\n\n    // Set a flag so if a debounced resize has been triggered,\n    // it can first check if it is actually isDestroyed and not doing anything\n    this.isDestroyed = true;\n    this.isEnabled = false;\n  }\n\n  /**\n   * Returns the outer width of an element, optionally including its margins.\n   *\n   * There are a few different methods for getting the width of an element, none of\n   * which work perfectly for all Shuffle's use cases.\n   *\n   * 1. getBoundingClientRect() `left` and `right` properties.\n   *   - Accounts for transform scaled elements, making it useless for Shuffle\n   *   elements which have shrunk.\n   * 2. The `offsetWidth` property.\n   *   - This value stays the same regardless of the elements transform property,\n   *   however, it does not return subpixel values.\n   * 3. getComputedStyle()\n   *   - This works great Chrome, Firefox, Safari, but IE<=11 does not include\n   *   padding and border when box-sizing: border-box is set, requiring a feature\n   *   test and extra work to add the padding back for IE and other browsers which\n   *   follow the W3C spec here.\n   *\n   * @param {Element} element The element.\n   * @param {boolean} [includeMargins=false] Whether to include margins.\n   * @return {{width: number, height: number}} The width and height.\n   */\n  static getSize(element, includeMargins = false) {\n    // Store the styles so that they can be used by others without asking for it again.\n    const styles = window.getComputedStyle(element, null);\n    let width = getNumberStyle(element, 'width', styles);\n    let height = getNumberStyle(element, 'height', styles);\n\n    if (includeMargins) {\n      const marginLeft = getNumberStyle(element, 'marginLeft', styles);\n      const marginRight = getNumberStyle(element, 'marginRight', styles);\n      const marginTop = getNumberStyle(element, 'marginTop', styles);\n      const marginBottom = getNumberStyle(element, 'marginBottom', styles);\n      width += marginLeft + marginRight;\n      height += marginTop + marginBottom;\n    }\n\n    return {\n      width,\n      height,\n    };\n  }\n\n  /**\n   * Change a property or execute a function which will not have a transition\n   * @param {Element[]} elements DOM elements that won't be transitioned.\n   * @param {function} callback A function which will be called while transition\n   *     is set to 0ms.\n   * @private\n   */\n  static _skipTransitions(elements, callback) {\n    const zero = '0ms';\n\n    // Save current duration and delay.\n    const data = elements.map((element) => {\n      const { style } = element;\n      const duration = style.transitionDuration;\n      const delay = style.transitionDelay;\n\n      // Set the duration to zero so it happens immediately\n      style.transitionDuration = zero;\n      style.transitionDelay = zero;\n\n      return {\n        duration,\n        delay,\n      };\n    });\n\n    callback();\n\n    // Cause forced synchronous layout.\n    elements[0].offsetWidth; // eslint-disable-line no-unused-expressions\n\n    // Put the duration back\n    elements.forEach((element, i) => {\n      element.style.transitionDuration = data[i].duration;\n      element.style.transitionDelay = data[i].delay;\n    });\n  }\n}\n\nShuffle.ShuffleItem = ShuffleItem;\n\nShuffle.ALL_ITEMS = 'all';\nShuffle.FILTER_ATTRIBUTE_KEY = 'groups';\n\n/** @enum {string} */\nShuffle.EventType = {\n  LAYOUT: 'shuffle:layout',\n  REMOVED: 'shuffle:removed',\n};\n\n/** @enum {string} */\nShuffle.Classes = Classes;\n\n/** @enum {string} */\nShuffle.FilterMode = {\n  ANY: 'any',\n  ALL: 'all',\n};\n\n// Overrideable options\nShuffle.options = {\n  // Initial filter group.\n  group: Shuffle.ALL_ITEMS,\n\n  // Transition/animation speed (milliseconds).\n  speed: 250,\n\n  // CSS easing function to use.\n  easing: 'cubic-bezier(0.4, 0.0, 0.2, 1)',\n\n  // e.g. '.picture-item'.\n  itemSelector: '*',\n\n  // Element or selector string. Use an element to determine the size of columns\n  // and gutters.\n  sizer: null,\n\n  // A static number or function that tells the plugin how wide the gutters\n  // between columns are (in pixels).\n  gutterWidth: 0,\n\n  // A static number or function that returns a number which tells the plugin\n  // how wide the columns are (in pixels).\n  columnWidth: 0,\n\n  // If your group is not json, and is comma delimeted, you could set delimiter\n  // to ','.\n  delimiter: null,\n\n  // Useful for percentage based heights when they might not always be exactly\n  // the same (in pixels).\n  buffer: 0,\n\n  // Reading the width of elements isn't precise enough and can cause columns to\n  // jump between values.\n  columnThreshold: 0.01,\n\n  // Shuffle can be isInitialized with a sort object. It is the same object\n  // given to the sort method.\n  initialSort: null,\n\n  // By default, shuffle will throttle resize events. This can be changed or\n  // removed.\n  throttle,\n\n  // How often shuffle can be called on resize (in milliseconds).\n  throttleTime: 300,\n\n  // Transition delay offset for each item in milliseconds.\n  staggerAmount: 15,\n\n  // Maximum stagger delay in milliseconds.\n  staggerAmountMax: 150,\n\n  // Whether to use transforms or absolute positioning.\n  useTransforms: true,\n\n  // Affects using an array with filter. e.g. `filter(['one', 'two'])`. With \"any\",\n  // the element passes the test if any of its groups are in the array. With \"all\",\n  // the element only passes if all groups are in the array.\n  filterMode: Shuffle.FilterMode.ANY,\n\n  // Attempt to center grid items in each row.\n  isCentered: false,\n\n  // Attempt to align grid items to right.\n  isRTL: false,\n\n  // Whether to round pixel values used in translate(x, y). This usually avoids\n  // blurriness.\n  roundTransforms: true,\n};\n\nShuffle.Point = Point;\nShuffle.Rect = Rect;\n\n// Expose for testing. Hack at your own risk.\nShuffle.__sorter = sorter;\nShuffle.__getColumnSpan = getColumnSpan;\nShuffle.__getAvailablePositions = getAvailablePositions;\nShuffle.__getShortColumn = getShortColumn;\nShuffle.__getCenteredPositions = getCenteredPositions;\n\nexport default Shuffle;\n"]}